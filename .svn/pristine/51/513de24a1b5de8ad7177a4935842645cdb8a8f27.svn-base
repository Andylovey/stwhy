<template>
  <div>
    <div style="margin-bottom:10px;">
        <el-input v-model="bookName" placeholder="请输入图书资讯名称" style="width: 250px; margin-right: 10px" clearable></el-input>
        <el-select v-model="isShow" slot="prepend" placeholder="请选择是否显示" style="width:150px" clearable >
            <el-option label="全部" value="-1"></el-option>
            <el-option label="不显示" value="0"></el-option>
            <el-option label="显示" value="1"></el-option>
        </el-select>
        <el-select v-model="isTop" slot="prepend" placeholder="请选择是否置顶" style="width:150px" clearable >
            <el-option label="全部" value="-1"></el-option>
            <el-option label="不置顶" value="0"></el-option>
            <el-option label="置顶" value="1"></el-option>
        </el-select>
        <el-date-picker
            v-model="selectDate"
            align="right"
            type="date"
            placeholder="请选择日期"
            value-format="yyyy-MM-dd"
            style="margin-right: 10px;">
        </el-date-picker>
        <el-button slot="append" icon="el-icon-search" type="primary" @click="handleSearch">搜索</el-button>
    </div>
    <el-table
      v-loading="loading"
      element-loading-text="拼命加载中"
      element-loading-spinner="el-icon-loading"
      element-loading-background="rgba(0, 0, 0, 0.8)"
      border
      :data="tableData"
      style="width: 100%"
      height="500">
        <el-table-column
          prop="inf_id"
          label="序号"
          sortable
          align="center">
       </el-table-column>
       <el-table-column
          prop="inf_sort"
          label="排序"
          sortable
          align="center">
       </el-table-column>
       <el-table-column
          property="inf_isshow"
          label="是否显示"
          sortable
          align="center">
            <template slot-scope="scope">
                <el-switch
                    on-text="是"
                    off-text="否"
                    active-color="#13ce66" 
                    inactive-color="#dcdfe6" 
                    active-value="100"
                    inactive-value="0"
                    v-model="scope.row.inf_isshow"
                    @click.native="changeShow(scope.$index,scope.row)">
                </el-switch>
            </template>
       </el-table-column>
       <el-table-column
          property="inf_istop"
          label="是否置顶"
          sortable
          align="center">
            <template slot-scope="scope">
                <el-switch
                    on-text="是"
                    off-text="否"
                    active-color="#13ce66" 
                    inactive-color="#dcdfe6" 
                    active-value="100"
                    inactive-value="0"
                    v-model="scope.row.inf_istop" 
                    @click.native="changeTop(scope.$index,scope.row)">
                </el-switch>
            </template>
       </el-table-column>
       <el-table-column
          prop="inf_createtime"
          label="创建日期"
          sortable
          align="center">
       </el-table-column>
       <el-table-column
          prop="inf_name"
          label="标题"
          sortable
          align="center">
       </el-table-column>
       <el-table-column
        fixed="right"
        label="操作"
        align="center"
        width="150">
        <template slot-scope="scope">
            <el-button @click="handleDetail(scope.row)" type="text" size="small">查看</el-button>
            <el-button @click="handleEdit(scope.row)" type="text" size="small">编辑</el-button>
        </template>
        </el-table-column>
    </el-table>

    <!-- 分页 -->
    <div id="pagination">
      <el-pagination
        background
        layout="prev, pager, next"
        :total="total"
        @current-change="handleCurrentChange">
      </el-pagination>
    </div>

    <!-- 查看详情的模态框 -->
    <el-dialog
      :visible.sync="DetailDialogTableVisible"
      title="图书资讯管理详情" 
      :close-on-click-modal="false"
      top="20px">
      <!-- 表单 -->
      <el-form ref="DetailForm" :model="DetailForm" label-width="80px">
        <el-form-item label="序号">
          <el-input v-model="DetailForm.inf_id" disabled></el-input>
        </el-form-item>
        <el-form-item label="排序">
          <el-input v-model="DetailForm.inf_sort" disabled></el-input>
        </el-form-item>
        <el-form-item label="是否显示">
            <el-radio v-model="DetailForm.inf_isshow" disabled label="true">是</el-radio>
            <el-radio v-model="DetailForm.inf_isshow" disabled label="false">否</el-radio>
        </el-form-item>
        <el-form-item label="是否置顶">
            <el-radio v-model="DetailForm.inf_istop" disabled label="true">是</el-radio>
            <el-radio v-model="DetailForm.inf_istop" disabled label="false">否</el-radio>
        </el-form-item>
        <el-form-item label="文章地址">
          <el-input v-model="DetailForm.ini_src" disabled></el-input>
        </el-form-item>
        <el-form-item label="时间">
          <!-- <el-input v-model="DetailForm.inf_createtime" disabled></el-input> -->
          <el-date-picker
            v-model="DetailForm.inf_createtime"
            type="date"
            disabled>
          </el-date-picker>
        </el-form-item>
        <el-form-item label="标题">
          <el-input v-model="DetailForm.inf_name" disabled></el-input>
        </el-form-item>
        <el-form-item label="内容">
          <!-- <el-input v-model="DetailForm.ini_content"></el-input> -->
          <div v-html="DetailForm.ini_content" style="height:200px;overflow-y:scroll"></div>
        </el-form-item>
      </el-form>
    </el-dialog>

    <!-- 编辑的模态框 -->
    <el-dialog
      :visible.sync="EditDialogTableVisible"
      title="图书资讯管理编辑" 
      :close-on-click-modal="false"
      @closed="EditDialogClosed('EditForm')"
      top="20px">
      <!-- 表单 -->
      <el-form ref="EditForm" :model="EditForm" label-width="80px" :rules="EditRules">
        <el-form-item label="序号" prop="inf_id">
          <el-input v-model="EditForm.inf_id"></el-input>
        </el-form-item>
        <el-form-item label="排序" prop="inf_sort">
          <el-input v-model="EditForm.inf_sort"></el-input>
        </el-form-item>
        <el-form-item label="是否显示">
            <el-radio v-model="EditForm.inf_isshow" disabled label="true">是</el-radio>
            <el-radio v-model="EditForm.inf_isshow" disabled label="false">否</el-radio>
        </el-form-item>
        <el-form-item label="是否置顶">
            <el-radio v-model="EditForm.inf_istop" disabled label="true">是</el-radio>
            <el-radio v-model="EditForm.inf_istop" disabled label="false">否</el-radio>
        </el-form-item>
        <el-form-item label="文章地址">
          <el-input v-model="EditForm.ini_src" readonly></el-input>
        </el-form-item>
        <el-form-item label="时间">
          <!-- <el-input v-model="EditForm.inf_createtime" readonly></el-input> -->
          <el-date-picker
            v-model="EditForm.inf_createtime"
            type="date"
            readonly>
          </el-date-picker>
        </el-form-item>
        <el-form-item label="标题" prop="inf_name">
          <el-input v-model="EditForm.inf_name"></el-input>
        </el-form-item>
        <el-form-item label="内容">
          <!-- <el-input v-model="DetailForm.ini_content"></el-input> -->
          <div v-html="EditForm.ini_content" style="height:200px;overflow-y:scroll"></div>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" @click="submitEditForm('EditForm')">提交</el-button>
          <el-button @click="cancleEditForm('EditForm')">取消</el-button>
        </el-form-item>
      </el-form>
    </el-dialog>
  </div>
</template>

<script>
// 引入接口
import api from '@/api/api.js'
// 获取token
import { getToken , removeToken } from '@/utils/auth'
// 时间过滤器
import {formatDate} from '@/filter/date.js';
// 引用拖拽
import elDragDialog from '@/directive/el-dragDialog';

export default {
  name: 'bookinfo',
  directives : {elDragDialog},
  data() {
      return {
          loading : true, // 加载条
          tableData : [],
          total : 0 , // 总条数
          start : 0, // 默认第一页
          limit : 10, // 每页10条

          bookName : '' , // 搜索图书名称
          isShow : '' , // 搜索是否显示
          isTop : '' , // 搜索是否置顶
          selectDate : '' , // 搜索选择日期

          // 查看详情的数据
          DetailDialogTableVisible : false, // 详情框默认的模态框
          DetailForm : {
              inf_id : '',
              inf_sort : '',
              inf_isshow : '',
              ini_src : '',
              inf_istop : '',
              inf_createtime : '',
              inf_name : '',
              ini_content : ''
          },

          // 编辑的数据
          EditDialogTableVisible : false, // 编辑框默认的模态框
          EditForm : {
              inf_id : '',
              inf_sort : '',
              inf_isshow : '',
              ini_src : '',
              inf_istop : '',
              inf_createtime : '',
              inf_name : '',
              ini_content : ''
          },
          EditRules : {
              inf_id : [{required: true,message : '请输入序号', trigger: 'blur'}],
              inf_sort : [{required: true,message : '请输入排序', trigger: 'blur'}],
              inf_name : [{required: true,message : '请输入标题', trigger: 'blur'}],
          }
      }
  },
  methods : {
      getInfo() {
          var formdata = new FormData();
          formdata.append('access_token',getToken());
          formdata.append('start',this.start);
          formdata.append('limit',this.limit);
          formdata.append('name1',this.bookName);
          formdata.append('id1',this.isShow);
          formdata.append('id2',this.isTop);
          formdata.append('date_start1',this.selectDate);
          this.$http.post(`${api.dev}/p/main/booksInfo/show`,formdata,{emulateJSON: true}).then(res => {
                if(res.body.code == 200) {
                    // 先过滤
                    res.body.content.records.forEach( item => {
                        if(item.inf_isshow == true) {
                            item.inf_isshow = '100'
                        }else {
                            item.inf_isshow = '0'
                        }

                        if(item.inf_istop == true) {
                            item.inf_istop = '100'
                        }else {
                            item.inf_istop = '0'
                        }
                        // 过滤时间
                        item.inf_createtime = formatDate(new Date(item.inf_createtime),'yyyy-MM-dd')
                    })
                    this.tableData = res.body.content.records;
                    this.total = res.body.content.total;
                    this.loading = false;
                }else if (res.body.code == 500) {
                    this.$message({
                        message : res.body.msg,
                        type : 'error'
                    })
                    removeToken();
                    setTimeout(function () {
                        window.location.href = '/stwhy';
                    },2000)
                }
          })
      },
      // 处理搜索功能
      handleSearch() {
          this.loading = true;
          this.getInfo();
      },
      // 控制是否显示按钮
      changeShow(index,row) {
            this.$http.post(`${api.dev}/p/main/booksInfo/setShow`,{access_token: getToken(),inf_id : row.inf_id},{emulateJSON: true}).then(res => {
                if(res.body.code == 200) {
                    this.$message({
                        message: res.body.msg,
                        type: 'success'
                    });
                }else if(res.body.code == 500) {
                    this.$message({
                        message: res.body.msg,
                        type: 'error'
                    });
                }
            })
      },
      changeTop(index,row) {
          this.$http.post(`${api.dev}/p/main/booksInfo/setTop`,{access_token: getToken() , inf_id: row.inf_id},{emulateJSON: true}).then(res => {
              if(res.body.code == 200) {
                  this.$message({
                      message : res.body.msg,
                      type : 'success'
                  })
              }else if(res.body.code == 500) {
                  this.$message({
                      message: res.body.msg,
                      type: 'error'
                  })
              }
          })
      },
      // 处理查看详情
      handleDetail(row) {
            // 开启加载器
            const loading = this.$loading({
                    lock: true,
                    text: 'Loading',
                    spinner: 'el-icon-loading',
                    background: 'rgba(0, 0, 0, 0.7)'
            });
            this.$http.post(`${api.dev}/p/main/booksInfo/select`,{access_token : getToken(), inf_id : row.inf_id},{emulateJSON: true}).then(res => {
                if(res.body.code == 200) {
                    loading.close();
                    this.DetailDialogTableVisible = true;

                    this.DetailForm.inf_id = res.body.content.inf_id;
                    this.DetailForm.inf_sort = res.body.content.inf_sort;
                    this.DetailForm.inf_isshow = (res.body.content.inf_isshow).toString();
                    this.DetailForm.ini_src = res.body.content.ini_src;
                    this.DetailForm.inf_istop = (res.body.content.inf_istop).toString();
                    this.DetailForm.inf_createtime = formatDate(new Date(res.body.content.inf_createtime),'yyyy-MM-dd');
                    this.DetailForm.inf_name = res.body.content.inf_name;
                    this.DetailForm.ini_content = res.body.content.ini_content;
                }else if(res.body.code == 500) {
                    this.$message({
                        message: res.body.msg,
                        type: 'error'
                    });
                    removeToken();
                    setTimeout(function () {
                        window.location.href = '/stwhy';
                    },2000)
                }
            })
      },
      // 处理编辑
      handleEdit(row) {
          // 开启加载器
            const loading = this.$loading({
                lock: true,
                text: 'Loading',
                spinner: 'el-icon-loading',
                background: 'rgba(0, 0, 0, 0.7)'
            });
            this.$http.post(`${api.dev}/p/main/booksInfo/select`,{access_token : getToken(), inf_id : row.inf_id},{emulateJSON: true}).then(res => {
                if(res.body.code == 200) {
                    loading.close();
                    this.EditDialogTableVisible = true;

                    this.EditForm.inf_id = res.body.content.inf_id;
                    this.EditForm.inf_sort = res.body.content.inf_sort;
                    this.EditForm.inf_isshow = (res.body.content.inf_isshow).toString();
                    this.EditForm.ini_src = res.body.content.ini_src;
                    this.EditForm.inf_istop = (res.body.content.inf_istop).toString();
                    this.EditForm.inf_createtime = formatDate(new Date(res.body.content.inf_createtime),'yyyy-MM-dd');
                    this.EditForm.inf_name = res.body.content.inf_name;
                    this.EditForm.ini_content = res.body.content.ini_content;
                }else if(res.body.code == 500) {
                    this.$message({
                        message: res.body.msg,
                        type: 'error'
                    });
                    removeToken();
                    setTimeout(function () {
                        window.location.href = '/stwhy';
                    },2000)
                }
            })
      },
        // 提交编辑
        submitEditForm(formName) {
            this.$refs[formName].validate((valid) => {
                if(valid) {
                    // 开启加载器
                    const loading = this.$loading({
                        lock: true,
                        text: '正在保存中...',
                        spinner: 'el-icon-loading',
                        background: 'rgba(0, 0, 0, 0.7)'
                    });
                    var formdata = new FormData();
                    formdata.append('access_token',getToken());
                    formdata.append('inf_id',this.EditForm.inf_id);
                    formdata.append('inf_name',this.EditForm.inf_name);
                    formdata.append('inf_sort',this.EditForm.inf_sort);
                    this.$http.post(`${api.dev}/p/main/booksInfo/update`,formdata,{emulateJSON:true}).then(res => {
                        if(res.body.code == 200) {
                            loading.close();
                            this.EditDialogTableVisible = false;
                            this.$refs[formName].clearValidate(); // 清除表单验证规则
                            this.$message({
                                message: res.body.msg,
                                type: 'success'
                            });
                            this.loading = true;
                            this.getInfo();
                        }else if(res.body.code == 500) {
                            this.$message({
                                message: res.body.msg,
                                type: 'error'
                            });
                        }
                    })
                }else {
                    console.log('error submit');
                    return false;
                }
            })
        },
        // 关闭编辑框
        EditDialogClosed(formName) {
          this.$refs[formName].clearValidate(); // 清除表单验证规则
        },
        // 取消编辑框
        cancleEditForm(formName) {
          this.EditDialogTableVisible = false;
          this.$refs[formName].clearValidate(); // 清除表单验证规则
        },
      // 分页
        handleCurrentChange(val) {
            this.loading = true;
            this.start = 10 * (val - 1);
            this.getInfo();
        }
  },
  created() {
      this.getInfo();
  }
}
</script>


<style lang="stylus" scoped>
#pagination
  margin-top 10px
</style>

<style scoped>
.el-select.el-select--medium {
    margin: 0 10px 0 0;
}
</style>

