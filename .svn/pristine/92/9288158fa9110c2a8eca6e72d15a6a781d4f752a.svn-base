<template>
  <div>
        <el-breadcrumb separator-class="el-icon-arrow-right" style="padding-left:35px;font-size:16px;margin:25px 0;">
            <el-breadcrumb-item style="font-weight:700">{{titleInfo[0]}}</el-breadcrumb-item>
            <el-breadcrumb-item>{{titleInfo[1]}}</el-breadcrumb-item>
        </el-breadcrumb>
        <!-- <span style="font-size:14px;color:#aaa">您当前所在的位置为：</span> -->
      <el-form ref="AddForm" :model="AddForm" label-width="120px" :rules="AddRules" style="margin-top:10px;margin-bottom:60px;">
          <el-row type="flex" class="row-bg">
            <el-col :span="14">
                <el-form-item label="标题" prop="article.a_title">
                    <el-input v-model="AddForm.article.a_title"></el-input>
                </el-form-item>
            </el-col>
          </el-row>
          
          <el-row type="flex" class="row-bg">
            <el-col :span="14">
                <el-form-item v-for="item in AddForm.fields" :key="item.f_key" :label="item.f_name" :required="item.f_required==0?true:false">
                    <!-- <el-input type="textarea" :rows="2" v-if="item.f_type==0" v-model="item.f_value"></el-input>  -->
                    <el-input v-if="item.f_type==0" v-model="item.f_value"></el-input>
                    <el-upload
                        v-if="item.f_type==1"
                        :class="{disabled:uploadDisabled}"
                        :action="uploadAddressCover"
                        list-type="picture-card"
                        name="file"
                        :limit="1"
                        ref="AddUpload"
                        :on-success="successAddUploadCover"
                        :on-remove="removeAddUploadCover"
                        :before-upload="beforeUploadCover">
                        <i class="el-icon-plus"></i>
                    </el-upload>
                    <!-- <quill-editor ref="AddTextEditor"
                        v-if="item.f_type==2"
                        :content="item.f_value"
                        :options = "AddEditorOption"
                        v-model="item.f_value"
                        style="width:800px;height:500px;overflow:scroll"
                        >
                    </quill-editor> -->
                    <vue-ueditor-wrap 
                        v-if="item.f_type==2" 
                        v-model="item.f_value" 
                        :config="editorConfig">
                    </vue-ueditor-wrap>
                    <!-- <div v-if="item.f_type==3">
                        <el-button type="primary" @click="uploadAudioVisible = true">上传音频</el-button>
                        <div class="AudioSourceBasePlace" style="margin-top:10px;"></div>
                    </div> -->
                    <div v-if="item.f_type==3">
                        <el-upload class="avatar-uploader el-upload--text" 
                            :action="uploadAddressAudio" 
                            :show-file-list="false" 
                            :on-progress="uploadAudioProcess"
                            :on-success="handleAudioSuccess">
                            <audio v-if="item.f_value !='' && audioFlag == false" :src="`${address}${item.f_value}`" class="avatar" controls="controls">您的浏览器不支持音频播放</audio>
                            <i v-else-if="item.f_value =='' && audioFlag == false" class="el-icon-plus audio avatar-uploader-icon"></i>
                            <el-progress v-if="audioFlag == true" type="circle" :percentage="audioUploadPercent" style="margin-top:30px;"></el-progress>
                        </el-upload>
                    </div>
                    <!-- <div v-if="item.f_type==4" style="width:500px;height:300px;"> -->
                        <!-- <video controls="controls" width="100%">
                            <source :src="item.f_value" type="video/ogg">
                            <source :src="item.f_value" type="video/webm">
                            <source :src="item.f_value" type="video/mp4">
                        </video> -->
                    <!-- </div> -->
                    <div v-if="item.f_type==4">
                        <!-- <input type="file" name="file" id="file" @change="uploadVideoTest"> -->
                        <!-- <el-upload
                            v-loading='uploadLoading'
                            element-loading-text="正在拼命上传中..."
                            element-loading-spinner="el-icon-loading"
                            element-loading-background="rgba(0, 0, 0, 0.8)"
                            :action="uploadAddressVideo" 
                            :show-file-list="false" 
                            :on-progress="uploadVideoProcess"
                            :on-success="handleVideoSuccess" 
                            :before-upload="beforeUploadVideo"
                            :on-change="handleUpload">
                            <video v-if="item.f_value !='' && videoFlag == false" :src="`${address}${item.f_value}`" class="avatar" controls="controls">您的浏览器不支持视频播放</video>
                            <i v-else-if="item.f_value =='' && videoFlag == false" class="el-icon-plus video avatar-uploader-icon"></i>
                            <el-progress v-if="videoFlag == true" type="circle" :percentage="videoUploadPercent" style="margin-top:30px;"></el-progress>
                        </el-upload> -->
                        <el-button type="primary" @click="handleUploadVideoTable">上传视频</el-button>
                        <div v-if="videoPlaySource" style="position:relative;width:200px;height:150px;">
                            <video :src="`${address}${videoPlaySource}`" controls width="200" height="150"></video>
                            <span style="position:absolute;right:0;top:0;width:25px;height:25px;background-color:red;border-radius:50%;text-align:center;line-height:25px;color:#fff;cursor:pointer;" @click="handleDeleteVideo(item)">X</span>
                        </div>
                    </div>
                    <el-date-picker
                        v-if="item.f_type==5"
                        v-model="item.f_value"
                        value-format="yyyy-MM-dd HH:mm:ss"
                        type="datetime"
                        placeholder="选择日期时间">
                    </el-date-picker>
                    <el-radio-group v-model="item.f_value" v-if="item.f_type==6">
                        <el-radio v-for="i in item.f_extra" :key="i.id" :label="i.name">{{i.name}}</el-radio>
                    </el-radio-group>
                    <el-upload
                        v-if="item.f_type==7"
                        :action="uploadAddressCover"
                        list-type="picture-card"
                        name="file"
                        ref="AddUpload"
                        :on-success="successAddUploadCoverArr"
                        :on-remove="removeAddUploadCoverArr"
                        :before-upload="beforeUploadCover"
                        :file-list="AddUploadFileListCover">
                        <i class="el-icon-plus"></i>
                    </el-upload>
                    <div v-if="item.f_type==8">
                        <el-button type="primary" @click="handleUploadVideoTableArr">上传视频</el-button>
                        <div class="videoSourceBasePlaceArr" style="margin-top:10px;">
                            <span v-for="item in videoPlaySourceArr" :key="item" style="position:relative;display:inline-block;width:200px;height:150px;">
                                <video controls :src="videoUrl + item" width="200px" height="150px" ref="deleteVideo"></video>
                                <span style="position:absolute;right:0;top:0;width:25px;height:25px;background-color:red;border-radius:50%;text-align:center;line-height:25px;color:#fff;cursor:pointer;" @click="handleDeleteVideoArr(item)">X</span>
                            </span>
                        </div>
                    </div>
                </el-form-item>
            </el-col>
          </el-row>

          <el-row type="flex" class="row-bg">
            <el-col :span="14">
                <el-form-item label="关键字" prop="article.a_keywords">
                    <el-input type="textarea" :rows="4" placeholder="多个关键字用半角逗号分隔" v-model="AddForm.article.a_keywords"></el-input>
                    <p style="margin:0;color:red">注：关键字的设置主要用于网络搜索</p>
                </el-form-item>
            </el-col>
          </el-row>


          <el-row type="flex" class="row-bg">
            <el-col :span="7">
                <el-form-item label="文章作者" prop="article.a_author">
                    <el-input v-model="AddForm.article.a_author"></el-input>
                </el-form-item>
            </el-col>
            <el-col :span="7">
                <el-form-item label="文章来源" prop="article.a_source">
                    <el-input v-model="AddForm.article.a_source"></el-input>
                </el-form-item>
            </el-col>
          </el-row>

          <el-row type="flex" class="row-bg">
            <el-col :span="14">
                <el-form-item label="分享标题" prop="article.a_share_title">
                    <el-input v-model="AddForm.article.a_share_title"></el-input>
                </el-form-item>
            </el-col>
             <!-- <el-col :span="7">
                <el-form-item label="分享链接" prop="article.a_share_url">
                    <el-input v-model="AddForm.article.a_share_url"></el-input>
                </el-form-item>
            </el-col> -->
          </el-row>

          <el-row type="flex" class="row-bg">
            <el-col :span="14">
                <el-form-item label="分享介绍" prop="article.a_share_introduce">
                    <el-input type="textarea" :rows="4" v-model="AddForm.article.a_share_introduce"></el-input>
                    <span style="color:red">* 最多可输入200个字</span>
                </el-form-item>
            </el-col>
          </el-row>

          <el-row type="flex" class="row-bg">
              <el-col :span="14">
                    <el-form-item label="分享图片" prop="article.a_share_img">
                        <el-upload
                            :class="{disabled:uploadShareDisabled}"
                            :action="uploadAddressCover"
                            list-type="picture-card"
                            name="file"
                            :limit="1"
                            ref="AddShareUpload"
                            :on-success="successAddShareUploadCover"
                            :on-remove="removeAddShareUploadCover"
                            :before-upload="beforeUploadCover">
                            <i class="el-icon-plus"></i>
                        </el-upload>
                    </el-form-item>
              </el-col>
          </el-row>
        </el-form>

        <!-- 音频上传 -->
      <el-dialog 
      :visible.sync="uploadAudioVisible"
      :close-on-click-modal="false"
      title="上传音频"
      width="650px">
        <span style="width:300px;height:150px;display:inline-block" id="loadArea" v-if="loadIsShow"></span>
        <span v-if="AudioSrcIsShow" ref="AudioSourceBase" id="AudioSourceBase">
            <div v-for="item in AudioSrc" :key="item" style="position:relative;width:300px;display:inline-block">
                <audio :src="item" width="300" controls="controls"></audio>
                <!-- <span v-for="item in videoSrc.length" :key="item" title="删除视频" style="cursor:pointer;position:absolute;top:0;right:0;width:20px;height:20px;z-index:999;border-radius:50%;background-color:red;text-align:center;line-height:20px;color:#fff;"> x </span> -->
            </div>
        </span>
        <div class="el-upload el-upload--picture-card" style="margin-left:10px;">
            <i class="el-icon-plus" @click="uploadAudioPlus"></i>
        </div>
        <input type="file" id="uploadAudio" ref="uploadAudio" @change="uploadAudioChange">

        <!-- <el-button type="primary" style="position:absolute;bottom:12px;right:20px;" @click="confirmUpload">确定</el-button> -->
      </el-dialog>

      <el-dialog 
      :visible.sync="uploadVideoVisible"
      :close-on-click-modal="false"
      title="上传文件"
      class="uploadFileDialog"
      width="800px">
        <el-button type="primary" id="btn" @click="handleUploadVideo" class="addBtn">添加视频</el-button>
        <span style="color:red;font-size:14px;margin-left:15px;">支持格式：mp4，flv，wmv，avi</span>
        <div class="fileInfo" style="margin-top:10px;">
            <input type="file" name="file" id="file" style="display:none" @change="handleUploadVideoChange">
            <table cellpadding="10" id="table" width="100%" cellspacing="2">
                <tr bgcolor="#ececec">
                    <th width="250">文件名</th>
                    <th>大小</th>
                    <th width="280">状态</th>
                    <th>操作</th>
                </tr>
                <tr class="fileInfoDetail" style="display:none;">
                    <td class="filename" style="text-align:left;border-bottom:1px solid #ccc"></td> 
                    <td class="filesize" style="text-align:center;border-bottom:1px solid #ccc"></td> 
                    <td style="position:relative;border-bottom:1px solid #ccc">
                        <progress max="100" class="progress"></progress>
                        <span class='percent' style="position:absolute;left:65px;"></span>
                        <span class="reqInfo" style="font-size:12px;">正在请求...</span>
                    </td> 
                    <td style="text-align:center;border-bottom:1px solid #ccc">
                        <button class="deleteBtn el-button el-button--primary el-button--small" style="cursor: pointer">取消</button>
                    </td> 
                </tr>
            </table>
        </div>
        <el-button type="primary" size="small" style="margin-top:10px;position:absolute;right:20px;" class="confirmBtn" @click="handleConfirm">确定</el-button>
      </el-dialog>


      <el-dialog 
      :visible.sync="uploadVideoVisibleArr"
      :close-on-click-modal="false"
      title="上传文件"
      class="uploadFileDialog"
      width="800px">
            <el-button type="primary" id="btn" @click="handleUploadVideoArr" class="addBtnArr">添加视频</el-button>
            <span style="color:red;font-size:14px;margin-left:15px;">支持格式：mp4，flv，wmv，avi</span>
            <div class="fileInfoArr" style="margin-top:10px;">
                <input type="file" name="file" id="fileArr" style="display:none" @change="handleUploadVideoChangeArr">
                <table cellpadding="10" id="table" width="100%" cellspacing="2">
                    <tr bgcolor="#ececec">
                        <th width="250">文件名</th>
                        <th>大小</th>
                        <th width="280">状态</th>
                        <th>操作</th>
                    </tr>
                </table>
            </div>
            <el-button type="primary" size="small" style="margin-top:10px;position:absolute;right:20px;" class="confirmBtnArr" @click="handleConfirmArr">确定</el-button>
      </el-dialog>

        <el-footer>
            <el-button type="primary" @click="goBack" size="small" icon="el-icon-arrow-left">返回</el-button>
            <el-button type="primary" @click="AddSave('AddForm')" size="small" icon="el-icon-edit-outline">保存</el-button>
        </el-footer>
  </div>
</template>

<script>
// 引入接口
import api from '@/api/api.js'
// 获取token
import { getToken , removeToken } from '@/utils/auth'

// 引入富文本框插件
import { quillEditor } from 'vue-quill-editor'
import 'quill/dist/quill.core.css'
import 'quill/dist/quill.snow.css'
import 'quill/dist/quill.bubble.css'

// 引入ueditor
import VueUeditorWrap from 'vue-ueditor-wrap' 

import $ from 'jquery'

export default {
  name: 'componentspage1',
  components : {
        quillEditor,
        VueUeditorWrap
  },
  data() {
      return { 
            uploadLoading : false,
            titleInfo : [],
            AddForm : {
                article : {
                    a_title : '',
                    a_keywords : '',
                    a_id : '',
                    a_author : '',
                    a_source : '',
                    a_share_title : '',
                    // a_share_url : '',
                    a_share_introduce : '',
                    a_share_img : ''
                },
                fields : []
            },

            address : `${api.address}`,

            uploadAddressCover : `${api.dev}/p/main/upload/image`,  // 上传图片的地址
            uploadAddressVideo : `${api.dev}/p/main/upload/video`,  // 上传视频的地址
            uploadAddressAudio : `${api.dev}/p/main/upload/audio`,  // 上传视频的地址

            videoFlag : false,
            videoUploadPercent : 0,

            audioFlag : false,
            audioUploadPercent : 0,

            AddRules : {
                article : {
                    a_title : [{required: true,message : '请输入标题', trigger: 'blur'}],
                    // a_keywords : [{required: true,message : '请输入关键字', trigger: 'blur'}]
                },
                // a_contact : [{required: true,message : '请输入ddddd', trigger: 'blur'}],
            },
            AddEditorOption : {
                theme: 'snow',
                boundary: document.body, 
                modules: {
                    toolbar: [
                    ['bold', 'italic', 'underline', 'strike'],
                    ['blockquote', 'code-block'],
                    [{ 'header': 1 }, { 'header': 2 }],
                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                    [{ 'script': 'sub' }, { 'script': 'super' }],
                    [{ 'indent': '-1' }, { 'indent': '+1' }],
                    [{ 'direction': 'rtl' }],
                    [{ 'size': ['small', false, 'large', 'huge'] }],
                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                    [{ 'color': [] }, { 'background': [] }],
                    [{ 'font': [] }],
                    [{ 'align': [] }],
                    ['clean'],
                    ['link', 'image', 'video']
                    ]
                },
                placeholder: 'Insert text here ...',
                readOnly: true
            },
            // msg : 'dasda',
            editorConfig : {
                // 如果需要上传功能,找后端小伙伴要服务器接口地址
                // serverUrl: this.$config.baseUrl + 'ueditor/ueditorConfig',
                serverUrl: `${api.dev}/api/main/ueditor/ueditorConfig`,
                // 你的UEditor资源存放的路径,相对于打包后的index.html
                UEDITOR_HOME_URL: '/ueditor/',
                // UEDITOR_HOME_URL: '/ueditor/',
                // 编辑器不自动被内容撑高
                autoHeightEnabled: false,
                // 工具栏是否可以浮动
                autoFloatEnabled: false,
                // 初始容器高度
                initialFrameHeight: 520,
                // 初始容器宽度
                initialFrameWidth: 800,
                // 关闭自动保存
                enableAutoSave: true,
                 imageBlockLine: 'center',
                toolbars: [[
                    'fullscreen', 'source', '|', 'undo', 'redo', '|',
                    'bold', 'italic', 'underline', 'fontborder', 'strikethrough', 'superscript', 'subscript', 'removeformat', 'formatmatch', 'autotypeset', 'blockquote', 'pasteplain', '|', 'forecolor', 'backcolor', 'insertorderedlist', 'insertunorderedlist', 'selectall', 'cleardoc', '|',
                    'rowspacingtop', 'rowspacingbottom', 'lineheight', '|',
                    'customstyle', 'paragraph', 'fontfamily', 'fontsize', '|',
                    'directionalityltr', 'directionalityrtl', 'indent', '|',
                    'justifyleft', 'justifycenter', 'justifyright', 'justifyjustify', '|', 'touppercase', 'tolowercase', '|',
                    'link', 'unlink', 'anchor', '|', 'imagenone', 'imageleft', 'imageright', 'imagecenter', '|',
                    'simpleupload', 'emotion', 'pagebreak', 'template', 'background', '|',
                    'horizontal', 'date', 'time', 'spechars', 'snapscreen', 'wordimage', '|',
                    'inserttable', 'deletetable', 'insertparagraphbeforetable', 'insertrow', 'deleterow', 'insertcol', 'deletecol', 'mergecells', 'mergeright', 'mergedown', 'splittocells', 'splittorows', 'splittocols', 'charts', '|',
                    'print', 'preview', 'searchreplace', 'drafts', 'help'
                ]]
            },
            uploadAudioVisible : false,
            AudioSrcIsShow : false,
            AudioSrc : [],
            loadIsShow : false,


            uploadVideoVisible : false,
            videoPlaySource : '',


            AddUploadFileListCover : [],

            a_contact : '',


            uploadVideoVisibleArr : false,
            videoSaveSourceArr : [],
            videoPlaySourceArr : [],
            videoUrl : `${api.address}`,

      }
  },
  methods : {
      goBack() {
        this.$router.back(-1);
      },
    getCategoryInfo() {
        this.$http.post(`${api.dev}/p/main/category/getCategory`,{access_token:getToken,c_id:this.$route.params.id},{emulateJSON:true}).then(res => {
            if(res.body.code == 200) {
                this.titleInfo = res.body.content;
            }else if(res.body.code == 500) {
                this.$message({
                    message: res.body.msg,
                    type: 'error'
                });
            }else if(res.body.code == 510) {
                this.$message({
                    message: res.body.msg,
                    type: 'error'
                });
                removeToken();
                setTimeout(function () {
                    window.location.href = '';
                },2000)
            }
        })
    },
    getInfo() {
        // this.$http.get(`${api.dev}/p/main/information/select`,{params: {access_token : getToken(),a_id : this.$route.params.id,c_id:this.$route.params.cid}}).then(res => {
        //     if(res.body.code == 200) {
        //         this.AddForm.article.a_title = res.body.content.article.a_title;
        //         this.AddForm.article.a_id = res.body.content.article.a_id;
        //         this.AddForm.fields = res.body.content.fields;
        //     }else if(res.body.code == 500) {
        //         this.$message({
        //             message: res.body.msg,
        //             type: 'error'
        //         });
        //         // removeToken();
        //         // setTimeout(function () {
        //         //     window.location.href = '';
        //         // },2000)
        //     }
        // })
        this.$http.get(`${api.dev}/p/main/category/select`,{params: {access_token:getToken(),c_id : this.$route.params.id}}).then(res => {
            if(res.body.code == 200) {
                this.AddForm.fields = res.body.content.fields
            }else if(res.body.code == 500) {
                this.$message({
                    message: res.body.msg,
                    type: 'error'
                });
            }else {
                this.$message({
                    message: res.body.msg,
                    type: 'error'
                });
                removeToken();
                setTimeout(function () {
                    window.location.href = '';
                },2000)
            }
        })
    },
    successAddUploadCover(res,file,fileList) {
        this.AddForm.fields.forEach(item => {
            if(item.f_type == 1) {
                // item.f_value = `${api.address}${res.content}`
                item.f_value = `${res.content}`
            }
        })
    },
    successAddUploadCoverArr(res,file,fileList) {
        this.AddForm.fields.forEach(item => {
            if(item.f_type == 7 && typeof item.f_value == 'string') {
                item.f_value = JSON.parse(item.f_value);
                item.f_value.push(`${res.content}`)
                this.AddUploadFileListCover.push({url:`${api.address}${res.content}`})
            }else if(item.f_type == 7) {
                item.f_value.push(`${res.content}`)
                this.AddUploadFileListCover.push({url:`${api.address}${res.content}`})
            }
        })
    },
    removeAddUploadCoverArr(file,fileList) {
        for(var i = 0 ; i < this.AddUploadFileListCover.length ; i++) {
            if(file.url == this.AddUploadFileListCover[i].url) {
                this.AddUploadFileListCover.splice(i,1)
            }
        }

        var reg = new RegExp(`${api.address}`);
        file.url = file.url.replace(reg,'');

        for(var j = 0 ; j < this.AddForm.fields.length ; j++) {
            if(this.AddForm.fields[j].f_type == 7) {
                for(var k = 0 ; k < this.AddForm.fields[j].f_value.length ; k++) {
                    if(file.url == this.AddForm.fields[j].f_value[k]) {
                        this.AddForm.fields[j].f_value.splice(k,1)
                    }
                }
            }
        }
    },
    removeAddUploadCover(file,fileList) {
        // this.AddForm.fields.forEach(item => {
        //     if(item.f_type == 1) {
        //         item.f_value = ''
        //         item = []
        //     }
        // })

        
        this.AddForm.fields.forEach(item => {
            if(item.f_type == 1) {
                // console.log(item);
                item.f_value = ''
            }
        })
        
    },
    successAddShareUploadCover(res,file,fileList) {
        this.AddForm.article.a_share_img = res.content
    },
    removeAddShareUploadCover(file,fileList) {
        this.AddForm.article.a_share_img = ''
    },
    AddSave(formName) {
        this.$refs[formName].validate((valid) => {
            if(valid) {
                // 开启加载器
                const loading = this.$loading({
                    lock: true,
                    text: '正在保存中...',
                    spinner: 'el-icon-loading',
                    background: 'rgba(0, 0, 0, 0.7)'
                });
                var formdata = new FormData();
                formdata.append('access_token',getToken());
                formdata.append('a_title',this.AddForm.article.a_title);
                formdata.append('a_keywords',this.AddForm.article.a_keywords);
                formdata.append('a_category',this.$route.params.id);
                // for(var i = 0 ; i < this.AddForm.fields.length ; i++) {
                //     formdata.append(this.AddForm.fields[i].f_key,this.AddForm.fields[i].f_value);
                // }
                for(var i = 0 ; i < this.AddForm.fields.length ; i++) {
                    if(this.AddForm.fields[i].f_type == 7) {
                        formdata.append(this.AddForm.fields[i].f_key,JSON.stringify(this.AddForm.fields[i].f_value))
                    }
                    if(this.AddForm.fields[i].f_type == 8) {
                        formdata.append(this.AddForm.fields[i].f_key,JSON.stringify(this.videoPlaySourceArr))
                    }
                    // if(this.AddForm.fields[i].f_value != null && this.AddForm.fields[i].f_type != 7) {
                        if(this.AddForm.fields[i].f_type != 7 && this.AddForm.fields[i].f_type != 8) {
                            formdata.append(this.AddForm.fields[i].f_key,this.AddForm.fields[i].f_value);
                        }    
                    // }    
                }
                formdata.append('a_author',this.AddForm.article.a_author);
                formdata.append('a_source',this.AddForm.article.a_source);
                formdata.append('a_share_title',this.AddForm.article.a_share_title);
                // formdata.append('a_share_url',this.AddForm.article.a_share_url);
                formdata.append('a_share_introduce',this.AddForm.article.a_share_introduce);
                formdata.append('a_share_img',this.AddForm.article.a_share_img);
                this.$http.post(`${api.dev}/p/main/information/save`,formdata,{emulateJSON:true}).then(res => {
                    if(res.body.code == 200) {
                        loading.close();
                        this.$message({
                            message: res.body.msg,
                            type: 'success'
                        });
                        this.$router.back(-1);
                    }else if(res.body.code == 500) {
                        this.$message({
                            message: res.body.msg,
                            type: 'error'
                        });
                    }
                })
            }else {
                console.log('submit error');
                return false;
            }
        })
    },
    beforeUploadVideo(file) {
        const isLt10M = file.size / 1024 / 1024  < 10;
        if (['video/mp4', 'video/ogg', 'video/flv','video/avi','video/wmv','video/rmvb'].indexOf(file.type) == -1) {
            this.$message.error('请上传正确的视频格式');
            return false;
        }
        // if (!isLt10M) {
        //     this.$message.error('上传视频大小不能超过10MB哦!');
        //     return false;
        // }
    },
    uploadVideoProcess(event, file, fileList){
        this.videoFlag = true;
        this.videoUploadPercent = file.percentage.toFixed(0);
    },
    handleVideoSuccess(res, file) {                               
        this.videoFlag = false;
        this.videoUploadPercent = 0; 
        if(res.code == 200) {
            this.AddForm.fields.forEach(item => {
                if(item.f_type == 4) {
                    item.f_value = res.content
                }
            })
            console.log('成功上传')
            setTimeout(() => {
                this.uploadLoading = false;
            })
        }else if(res.code == 500){
            this.$message({
                message: res.msg,
                type: 'error'
            });
        }
    },
    uploadAudioProcess(event, file, fileList){
        this.audioFlag = true;
        this.audioUploadPercent = file.percentage.toFixed(0);
    },
    handleAudioSuccess(res, file) {                               
        this.audioFlag = false;
        this.audioUploadPercent = 0; 
        if(res.code == 200) {
            this.AddForm.fields.forEach(item => {
                if(item.f_type == 3) {
                    item.f_value = res.content
                }
            })
        }else if(res.code == 500){
            this.$message({
                message: res.msg,
                type: 'error'
            });
        }
    },
    uploadAudioPlus() {
        $('#uploadAudio').click();
    },
    uploadAudioChange(e) {
        var _this = this;
        var formdata = new FormData();
        formdata.append('file',e.srcElement.files[0]);
        $.ajax({
            url: `${api.dev}/p/main/upload/audio`,
            type: "POST",
            data:formdata,
            cache:false,         //不设置缓存
            processData: false,  // 不处理数据
            contentType: false,   // 不设置内容类型
            beforeSend : function () {
                _this.loadIsShow = true;
                setTimeout(() => {
                    const loading = _this.$loading({
                        lock: true,
                        text: '正在上传中，请稍候...',
                        spinner: 'el-icon-loading',
                        background: 'rgba(0, 0, 0, 0.7)',
                        target: document.querySelector('#loadArea')
                    });
                })
            },
            success : function(res) {
                // 关闭loading
                $('.el-loading-mask').hide();
                $('.el-loading-spinner').hide();
                _this.loadIsShow = false;
                _this.AudioSrcIsShow = true;
                _this.uploadAudioVisible = false;
                // _this.videoSrc = `${api.address}${res.content}`
                _this.AudioSrc.push(`${api.address}${res.content}`) 

                // var videoDataBase = this.$refs.videoSourceBase;
                // $('.videoSourceBasePlace').append($('#videoSourceBase'));
                setTimeout(() => {
                    $('.AudioSourceBasePlace').append($('#AudioSourceBase')[0])
                })
            }
        }); 
    },
    handleUpload(event,file,fileList) {
        // this.videoFlag = true;
        // this.videoUploadPercent = file[0].percentage.toFixed(0);
        // this.videoUploadPercent = file[0].percentage;
        // console.log(file);
        this.uploadLoading = true;
        console.log('正在上传');
    },
    beforeUploadCover(file) {
        const isLt5M = file.size / 1024 / 1024  < 5;
        if (['image/jpg', 'image/jpeg', 'image/bmp','image/png'].indexOf(file.type) == -1) {
            this.$message.error('请上传正确的图片格式');
            return false;
        }
        if (!isLt5M) {
            this.$message.error('上传图片大小不能超过5MB!');
            return false;
        }
      },

      handleUploadVideoTable() {
        this.uploadVideoVisible = true;
      },
      handleUploadVideo() {
        $('#file').click()
      },
      handleUploadVideoChange() {
        const _this = this;
        var data = $('#file')[0].files[0]

        // 发送请求前先验证
        const isLt500M = data.size / 1024 / 1024  < 500;
        if (['video/mp4', 'video/flv', 'video/wmv','video/avi'].indexOf(data.type) == -1) {
            this.$message.error('请上传正确的视频格式');
            return false;
        }
        if (!isLt500M) {
            this.$message.error('上传视频大小不能超过500MB!');
            return false;
        }
        
        $('#table tr:last .deleteBtn').removeAttr('disabled')
        $('#table tr:last .deleteBtn').css({
            'cursor' : 'pointer',
            'background-color' : '#41B883',
            'border-color' : '#41B883',
            'color' : '#fff',
        })

        var formdata = new FormData();
        formdata.append('file',data);
        
        // $('#table').append(`
        //     <tr>
        //         <td style="text-align:left;border-bottom:1px solid #ccc">${data.name}</td> 
        //         <td style="text-align:center;border-bottom:1px solid #ccc">${(data.size / 1024 / 1024).toFixed(2)}MB</td> 
        //         <td style="position:relative;border-bottom:1px solid #ccc">
        //             <progress max="100" class="progress"></progress>
        //             <span class='percent' style="position:absolute;left:65px;"></span>
        //             <span class="reqInfo" style="font-size:12px;">正在请求...</span>
        //         </td> 
        //         <td style="text-align:center;border-bottom:1px solid #ccc">
        //             <button class="deleteBtn el-button el-button--primary el-button--small" style="cursor: pointer">取消</button>
        //         </td> 
        //     </tr>
        // `)
        $('#table tr.fileInfoDetail').css('display','table-row')
        $('#table td.filename').html(data.name);
        $('#table td.filesize').html((data.size / 1024 / 1024).toFixed(2) + 'MB')

        var xhr = new XMLHttpRequest();
        xhr.upload.onprogress = function (evt) {
            if(evt.lengthComputable){
                var loading = Math.round(evt.loaded / evt.total * 100);
                $('#table tr:last .progress').val(loading)
                $('#table tr:last .percent').html(loading + '%')
                $('#table tr:last .reqInfo').html('已上传：' + (evt.loaded / 1024 / 1024).toFixed(2) + 'MB')

                $('.addBtn').css({
                    'cursor' : 'not-allowed',
                    'background-color' : '#f4f4f5',
                    'border-color' : '#f4f4f5',
                    'color' : '#c0c4cc',
                })
                $('.addBtn').attr('disabled',true)

                $('.confirmBtn').css({
                    'cursor' : 'not-allowed',
                    'background-color' : '#f4f4f5',
                    'border-color' : '#f4f4f5',
                    'color' : '#c0c4cc',
                })
                $('.confirmBtn').attr('disabled',true)

                if(loading == 100) {
                    $('#table tr:last .deleteBtn').css({
                        'cursor' : 'not-allowed',
                        'background-color' : '#f4f4f5',
                        'border-color' : '#f4f4f5',
                        'color' : '#c0c4cc',
                    })
                    $('#table tr:last .deleteBtn').attr('disabled',true)
                    $('#table tr:last .reqInfo').html('已完成')

                    $('.addBtn').css({
                        'cursor' : 'pointer',
                        'background-color' : '#41B883',
                        'border-color' : '#41B883',
                        'color' : '#fff',
                    })
                    $('.addBtn').removeAttr('disabled')

                    $('.confirmBtn').css({
                        'cursor' : 'pointer',
                        'background-color' : '#41B883',
                        'border-color' : '#41B883',
                        'color' : '#fff',
                    })
                    $('.confirmBtn').removeAttr('disabled')
                }
            }
        }
        xhr.open('post',`${api.dev}/p/main/upload/video`,true);
        xhr.send(formdata);
        xhr.onreadystatechange = function () {
            if(xhr.status == 200 && xhr.readyState == 4) {
                var res = JSON.parse(xhr.responseText);
                // _this.videoSaveSource.push(res.content)
                _this.AddForm.fields.forEach(item => {
                    if(item.f_type == 4) {
                        item.f_value = res.content
                    }
                })

                $('#file').val('');                // 防止二次选择相同名字后不能被选中
            }
        }
        xhr.onabort = function () {
            console.log('取消AJAX请求')
        }
        // 防止点击多次 所以先解除绑定click事件
        $('.deleteBtn').unbind('click').click(function () {
            xhr.abort()
            $(this).parent().parent().hide()

            $('.addBtn').css({
                'cursor' : 'pointer',
                'background-color' : '#41B883',
                'border-color' : '#41B883',
                'color' : '#fff',
            })
            $('.addBtn').removeAttr('disabled')

            $('.confirmBtn').css({
                'cursor' : 'pointer',
                'background-color' : '#41B883',
                'border-color' : '#41B883',
                'color' : '#fff',
            })
            $('.confirmBtn').removeAttr('disabled')

            _this.AddForm.fields.forEach(item => {
                if(item.f_type == 4) {
                    item.f_value = ''
                }
            })
        })
    },
    handleConfirm() {
        this.AddForm.fields.forEach(item => {
            if(item.f_type == 4) {
                this.videoPlaySource = item.f_value
            }
        })
        this.uploadVideoVisible = false
        $('#table tr').eq(0).show().siblings().hide()
    },
    handleDeleteVideo(item) {
        this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
            this.$http.post(`${api.dev}/p/main/upload/delete`,{fileName:this.videoPlaySource},{emulateJSON:true}).then(res => {
                if(res.body.code == 200) {
                    this.$message({
                        type: 'success',
                        message : res.body.msg
                    })
                    this.AddForm.fields.forEach(item => {
                        if(item.f_type == 4) {
                            item.f_value = ''
                        }
                    })
                    this.videoPlaySource = ''
                }else if(res.body.code == 500) {
                        this.$message({
                        message: res.body.msg,
                        type: 'error'
                        });
                }else if(res.body.code == 510) {
                        this.$message({
                        message: res.body.msg,
                        type: 'error'
                        });
                        removeToken();
                        setTimeout(function () {
                        window.location.href = '';
                        },2000)
                }
            })
        })
    },
    handleUploadVideoTableArr() {
        this.uploadVideoVisibleArr = true;
    },
    handleUploadVideoArr() {
        $('#fileArr').click()
    },
    handleUploadVideoChangeArr() {
        const _this = this;
        var data = $('#fileArr')[0].files[0]
        console.log(data)
        var url = URL.createObjectURL(data);
        console.log(url.duration)

        // 发送请求前先验证
        const isLt500M = data.size / 1024 / 1024  < 500;
        if (['video/mp4', 'video/flv', 'video/wmv','video/avi'].indexOf(data.type) == -1) {
            this.$message.error('请上传正确的视频格式');
            return false;
        }
        if (!isLt500M) {
            this.$message.error('上传视频大小不能超过500MB!');
            return false;
        } 

        var formdata = new FormData();
        formdata.append('file',data);
        
        $('#table').append(`
            <tr>
                <td style="text-align:left;border-bottom:1px solid #ccc">${data.name}</td> 
                <td style="text-align:center;border-bottom:1px solid #ccc">${(data.size / 1024 / 1024).toFixed(2)}MB</td> 
                <td style="position:relative;border-bottom:1px solid #ccc">
                    <progress max="100" class="progressArr"></progress>
                    <span class='percentArr' style="position:absolute;left:65px;"></span>
                    <span class="reqInfoArr" style="font-size:12px;">正在请求...</span>
                </td> 
                <td style="text-align:center;border-bottom:1px solid #ccc">
                    <button class="deleteBtnArr el-button el-button--primary el-button--small" style="cursor: pointer">取消</button>
                </td> 
            </tr>
        `)

        var xhr = new XMLHttpRequest();
        xhr.upload.onprogress = function (evt) {
            if(evt.lengthComputable){
                var loading = Math.round(evt.loaded / evt.total * 100);
                $('#table tr:last .progressArr').val(loading)
                $('#table tr:last .percentArr').html(loading + '%')
                $('#table tr:last .reqInfoArr').html('已上传：' + (evt.loaded / 1024 / 1024).toFixed(2) + 'MB')

                $('.addBtnArr').css({
                    'cursor' : 'not-allowed',
                    'background-color' : '#f4f4f5',
                    'border-color' : '#f4f4f5',
                    'color' : '#c0c4cc',
                })
                $('.addBtnArr').attr('disabled',true)

                $('.confirmBtnArr').css({
                    'cursor' : 'not-allowed',
                    'background-color' : '#f4f4f5',
                    'border-color' : '#f4f4f5',
                    'color' : '#c0c4cc',
                })
                $('.confirmBtnArr').attr('disabled',true)

                if(loading == 100) {
                    $('#table tr:last .deleteBtnArr').css({
                        'cursor' : 'not-allowed',
                        'background-color' : '#f4f4f5',
                        'border-color' : '#f4f4f5',
                        'color' : '#c0c4cc',
                    })
                    $('#table tr:last .deleteBtnArr').attr('disabled',true)
                    $('#table tr:last .reqInfoArr').html('已完成')

                    $('.addBtnArr').css({
                        'cursor' : 'pointer',
                        'background-color' : '#41B883',
                        'border-color' : '#41B883',
                        'color' : '#fff',
                    })
                    $('.addBtnArr').removeAttr('disabled')

                    $('.confirmBtnArr').css({
                        'cursor' : 'pointer',
                        'background-color' : '#41B883',
                        'border-color' : '#41B883',
                        'color' : '#fff',
                    })
                    $('.confirmBtnArr').removeAttr('disabled')
                }
            }
        }
        xhr.open('post',`${api.dev}/p/main/upload/video`,true);
        xhr.send(formdata);
        xhr.onreadystatechange = function () {
            if(xhr.status == 200 && xhr.readyState == 4) {
                var res = JSON.parse(xhr.responseText);
                _this.videoSaveSourceArr.push(res.content)
                // _this.AddForm.fields.forEach(item => {
                // if(item.f_type == 8 && typeof item.f_value == 'string') {
                //         item.f_value = JSON.parse(item.f_value);
                //         item.f_value.push(`${res.content}`)
                //         _this.AddUploadFileListCover.push({url:`${api.address}${res.content}`})
                //     }else if(item.f_type == 7) {
                //         item.f_value.push(`${res.content}`)
                //         _this.AddUploadFileListCover.push({url:`${api.address}${res.content}`})
                //     }
                // })
                console.log(res)
                $('#fileArr').val('');                // 防止二次选择相同名字后不能被选中
            }
        }
        xhr.onabort = function () {
            console.log('取消AJAX请求')
        }
        // 防止点击多次 所以先解除绑定click事件
        $('.deleteBtnArr').unbind('click').click(function () {
            xhr.abort()
            $(this).parent().parent().remove()

            $('.addBtnArr').css({
                'cursor' : 'pointer',
                'background-color' : '#41B883',
                'border-color' : '#41B883',
                'color' : '#fff',
            })
            $('.addBtnArr').removeAttr('disabled')

            $('.confirmBtnArr').css({
                'cursor' : 'pointer',
                'background-color' : '#41B883',
                'border-color' : '#41B883',
                'color' : '#fff',
            })
            $('.confirmBtnArr').removeAttr('disabled')
        })
    },
    handleConfirmArr() {
        this.videoPlaySourceArr = []
        this.videoSaveSourceArr.forEach(item => {
            this.videoPlaySourceArr.push(item)
        })


        this.uploadVideoVisibleArr = false

        $('#table tr').eq(0).show().siblings().hide()
    },
    handleDeleteVideoArr(item) {
        this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
            for(var i = 0 ; i < this.videoSaveSourceArr.length ; i++) {
                if(this.videoSaveSourceArr[i] == item) {
                    this.videoSaveSourceArr.splice(i , 1)
                }
            }
            for(var i = 0 ; i < this.videoPlaySourceArr.length ; i++) {
                if(this.videoPlaySourceArr[i] == item) {
                    this.videoPlaySourceArr.splice(i , 1)
                }
            }
            this.$http.post(`${api.dev}/p/main/upload/delete`,{fileName:item},{emulateJSON:true}).then(res => {
                if(res.body.code == 200) {
                    this.$message({
                        type: 'success',
                        message : res.body.msg
                    })
                }else if(res.body.code == 500) {
                        this.$message({
                        message: res.body.msg,
                        type: 'error'
                        });
                }else if(res.body.code == 510) {
                        this.$message({
                        message: res.body.msg,
                        type: 'error'
                        });
                        removeToken();
                        setTimeout(function () {
                        window.location.href = '';
                        },2000)
                }
            })
        })
    },
  },
  created() {
      this.getInfo()
      this.getCategoryInfo()
  },
  computed: {
        uploadDisabled:function() {
            // return this.AddForm.b_photo != ''
            var flag = false;
            this.AddForm.fields.forEach(item => {
                if(item.f_type == 1 && item.f_value) {
                    flag = true;
                    return;
                }
            })
            return flag
        },
        uploadShareDisabled : function () {
            return this.AddForm.article.a_share_img != ''
        }
    },
}
</script>

<style lang="stylus" scoped>
.el-footer 
    background-color #A3C0D1;
    color #333;
    line-height 60px;
    position absolute;
    width 100%;
    bottom 0;
    z-index 999
#uploadAudio
    display none
</style>

<style>
.edui-default .edui-button-body, .edui-splitbutton-body, .edui-menubutton-body, .edui-combox-body {
    height: 20px;
}
div.edui-combox-body.edui-default {
    height: 20px;
}
.video.avatar-uploader-icon{
    font-size : 28px !important;
    color:#8c939d !important;
    width:178px !important;
    height: 178px !important;
    line-height:178px !important;
    text-align: center !important;
    border: 1px dashed #ccc !important; 
}
video.avatar {
    width: 178px !important;
    height: 178px !important;
    border: 1px dashed #ccc !important;
}
.audio.avatar-uploader-icon {
    font-size : 28px !important;
    color:#8c939d !important;
    width:178px !important;
    height: 50px !important;
    line-height: 50px !important;
    text-align: center;
    border: 1px dashed #ccc !important;
}
audio.avatar {
    width: 178px !important;
    height: 50px !important;
    /* border: 1px dashed #ccc !important; */
}
.el-table__fixed-right {
    right:10px !important;
}
</style>

