<template>
	<div>
		<div class="margin-bottom-10" style="float: right; ">
			<el-input v-model="searchName" placeholder="请输入用户名进行搜索" style="width:200px" @keyup.enter.native="getInfo('search')"></el-input>
			<el-button slot="append" icon="el-icon-search" type="primary" @keyup.enter="getInfo('search')" @click="getInfo('search')" style="margin-left:10px;">搜索</el-button>
		</div>
		<el-table
			v-if="permissionShow"
			v-loading="loading"
			element-loading-text="拼命加载中"
			element-loading-spinner="el-icon-loading"
			element-loading-background="rgba(0, 0, 0, 0.8)"
			:data="tableData"
			border
			style="width: 100%"
			height="calc(100% - 160px)">
			<el-table-column prop="br_id" label="序号" sortable align="center"  min-width="90"></el-table-column>
			<el-table-column prop="username" label="用户名" sortable align="center" min-width="160"></el-table-column>
			<el-table-column prop="br_bl_id" label="活动ID" sortable align="center" min-width="120"></el-table-column>
			<el-table-column prop="bl_name" label="活动名称" sortable align="center" min-width="160"></el-table-column>
			<el-table-column prop="br_statusText" label="验证状态" sortable align="center" min-width="150"></el-table-column>
			<el-table-column prop="br_code" label="预约码" sortable align="center" min-width="150"></el-table-column>
			<el-table-column prop="br_time" label="验证时间" sortable align="center" min-width="180"></el-table-column>
			<el-table-column prop="br_createtime" label="登记时间" sortable align="center" min-width="180"></el-table-column>
			<el-table-column
				fixed="right"
				label="操作"
				align="center"
				min-width="100"
				v-if="permissionValidate">
				<template slot-scope="scope">
					<el-button v-if="permissionValidate" @click="handleValidate(scope.row)" type="text" size="small">验证</el-button>
				</template>
			</el-table-column>
		</el-table>

		<!-- 分页 -->
		<div id="pagination">
			<el-pagination
				background
				layout="prev, pager, next"
				:total="total"
				@current-change="handleCurrentChange">
			</el-pagination>
		</div>

		<!-- 验证模态框 -->
		<el-dialog 
			:visible.sync="ValidateDialogTableVisible"
			title="验证用户" 
			top="8%"
			width="40%"
			@closed="cancleValidateForm('ValidateForm')"
			:close-on-click-modal="false">
			<el-form ref="ValidateForm" :model="ValidateForm" label-width="140px" :rules="ValidateRules">
				<el-form-item label="用户名" prop="username">
					<el-input v-model="ValidateForm.username" disabled></el-input>
				</el-form-item>
				<el-form-item label="活动名称" prop="bl_name">
					<el-input v-model="ValidateForm.bl_name" disabled></el-input>
				</el-form-item>
				<el-form-item label="验证码" prop="code">
					<el-input v-model="ValidateForm.code"></el-input>
				</el-form-item>
				<el-form-item class="text-align-right">
					<el-button type="primary" @click="submitValidateForm('ValidateForm')">提交</el-button>
					<el-button @click="cancleValidateForm('ValidateForm')">取消</el-button>
				</el-form-item>
			</el-form>
		</el-dialog>
	</div>
</template>

<script>
// 引入接口
import api from '@/api/api.js'
// 获取token
import { getToken , removeToken } from '@/utils/auth'
// 时间过滤器
import {formatDate} from '@/filter/date.js'

export default {
	name: 'bookingRecord',
	data() {
		return {
			/* 
			 * tableData: 表格数据
			 * loading: 加载状态（默认为true）
			 * total: 总条数（table数据总长度）
			 * start: 表格分页（默认第一页）
			 * limit: 每页显示条数
			 * searchName: 搜索（用户名）
			 */
			tableData : [],
			loading : true,
			total: 0,
			start : 0,
			limit : 10,
			searchName: '',

			ValidateDialogTableVisible: false,
			ValidateForm: {
				username : '',
				bl_name: '',
				code : '',
			},
			ValidateRules : {
				code : [{required: true, message : '请输入预约码', trigger: 'blur'}],
			},
			permissionShow: false, // 默认为false,根据权限是否显示
			permissionValidate: false, // 默认为false,根据权限是否查看
		}
	},
	methods : {
		/* 获取权限 */
		getSubPermission() {
			this.$http.get(
				`${api.dev}/p/permission/getSub`,
				{
					params:{
						access_token:getToken(),
						p_id: this.$route.params.id
					}
				}
			).then(res => {
				if(res.body.code == 200) {
					res.body.content.forEach(item => {
						if(item.p_name.indexOf('显示') > -1) {
							this.permissionShow = true;
						}else if(item.p_name.indexOf('验证') > -1) {
							this.permissionValidate = true;
						}
					})
				}else if(res.body.code == 500) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
				}else if(res.body.code == 510) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					removeToken();
					setTimeout(function () {
						window.location.href = '/stwhy';
					},2000)
				}
			})
		},
		/* 表格数据加载 */
		getInfo(searchName){
			//console.log('searchName:'+searchName);
			var searchVal = (searchName == 'search') ? this.searchName : '';
			this.$http.post(
				`${api.dev}/p/bespeakenroll/record/show`,
				{
					access_token: getToken(),
					start: this.start,
					limit: this.limit,
					name1: searchVal
				},
				{emulateJSON : true}
			).then(res => {
				if(res.body.code == 200) {
					res.body.content.records.forEach(i => {
						i.br_time = formatDate(new Date(i.br_time) , 'yyyy-MM-dd hh:mm:ss');
						i.br_createtime = formatDate(new Date(i.br_createtime) , 'yyyy-MM-dd hh:mm:ss');
						if(i.br_status) 
							i.br_statusText = '通过'
						else
							i.br_statusText = '未验证'
					});
					this.tableData = res.body.content.records;
					this.total = res.body.content.total;
					this.loading = false;
				}else if(res.body.code == 500) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
				}else if(res.body.code == 510) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					removeToken();
					setTimeout(function () {
						window.location.href = '/stwhy';
					},2000)
				}
			})
		},
		/* 验证加载 */
		handleValidate(row) {
			// 开启加载器
			const loading = this.$loading({
				lock: true,
				text: 'Loading',
				spinner: 'el-icon-loading',
				background: 'rgba(0, 0, 0, 0.7)'
			});
			//debugger;
			this.ValidateForm.username = row.username;
			this.ValidateForm.bl_name = row.bl_name;
			this.ValidateForm.bl_id = row.br_bl_id;
			//this.ValidateForm.code = row.code;
			loading.close();
			this.ValidateDialogTableVisible = true;
		},
		/* 验证用户预约报名记录 */
        submitValidateForm(formName) {
        	this.$refs[formName].validate((valid) => {
        		if(valid) {
		            // 开启加载器
		            const loading = this.$loading({
		                lock: true,
		                text: '正在保存中...',
		                spinner: 'el-icon-loading',
		                background: 'rgba(0, 0, 0, 0.7)'
		            });
		            var formdata = new FormData();
		            formdata.append('access_token',getToken());
		            formdata.append('bl_id', this.ValidateForm.bl_id);
		            formdata.append('code', this.ValidateForm.code);
		            this.$http.post(
		                `${api.dev}/p/bespeakenroll/record/check`,
		                formdata,
		                {emulateJSON:true}
		            ).then(res => {
		                loading.close();
		                if(res.body.code == 200) {
		                    //this.StateDialogTableVisible = false;
		                    this.$message({
		                        message: res.body.msg,
		                        type: 'success'
		                    });
		                    this.loading = true;
		                    this.cancleValidateForm()
		                }else if(res.body.code == 500) {
		                    this.$message({
		                        message: res.body.msg,
		                        type: 'error'
		                    });
		                }else if(res.body.code == 510) {
		                    this.$message({
		                        message: res.body.msg,
		                        type: 'error'
		                    });
		                    removeToken();
		                    setTimeout(function () {
		                        window.location.href = '/stwhy';
		                    },2000)
		                }
		            })
		            }else{
		            	console.log('error submit');
				  		return false;
		            }
            })
        },
        /* 取消验证 */
		cancleValidateForm(formName){
			this.ValidateDialogTableVisible = false;
			this.$refs[formName].resetFields(); // 清除表单验证规则
		},
		/* 分页 */
		handleCurrentChange(val) {
			this.loading = true;
			this.start = 10 * (val - 1);
			this.getInfo();
		}
	},
	created() {
		this.getSubPermission();
		this.getInfo();
	}
}
</script>


<style lang="stylus" scoped>
#pagination
	margin-top 10px
.margin-bottom-10
	margin-bottom 10px
.text-align-right
	text-align right

</style>

