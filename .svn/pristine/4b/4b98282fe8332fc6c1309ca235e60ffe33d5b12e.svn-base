<template>
  <div>
    <el-button type="primary" @click="AddDialogTableVisible = true" class="AddVillageBtn"><i class="el-icon-edit"></i> 新增</el-button>
    <el-table
      v-loading="loading"
      element-loading-text="拼命加载中"
      element-loading-spinner="el-icon-loading"
      element-loading-background="rgba(0, 0, 0, 0.8)"
      border
      :data="tableData"
      style="width: 100%"
      height="500">
        <el-table-column
          prop="fl_id"
          label="序号"
          sortable
          align="center"
          flex="1">
       </el-table-column>
       <el-table-column
          prop="fl_name"
          label="名称"
          sortable
          align="center"
          flex="1">
       </el-table-column>
       <el-table-column
          prop="fl_status"
          label="状态"
          sortable
          align="center"
          flex="1">
       </el-table-column>
       <el-table-column
          prop="fl_topic"
          label="专题ID"
          sortable
          align="center"
          flex="1">
       </el-table-column>
       <el-table-column
          prop="fl_url"
          label="链接"
          sortable
          align="center"
          flex="1">
       </el-table-column>
       <el-table-column
          fixed="right"
          label="操作"
          align="center"
          flex="1">
          <template slot-scope="scope">
              <el-button @click="handleDetail(scope.row)" type="text" size="small">查看</el-button>
              <el-button @click="handleEdit(scope.row)" type="text" size="small">编辑</el-button>
              <el-button @click="handleDelete(scope.row)" type="text" size="small">删除</el-button>
          </template>
       </el-table-column>     
    </el-table>

    <!-- 查看详情的模态框 -->
    <el-dialog
      v-elDragDialog
      :visible.sync="DetailDialogTableVisible"
      title="友链管理详情" 
      :close-on-click-modal="false">
      <!-- 表单 -->
      <el-form ref="DetailForm" :model="DetailForm" label-width="80px">
        <el-form-item label="序号">
          <el-input v-model="DetailForm.fl_id" disabled></el-input>
        </el-form-item>
        <el-form-item label="名称">
          <el-input v-model="DetailForm.fl_name" disabled></el-input>
        </el-form-item>
        <el-form-item label="状态">
          <!-- <el-input v-model="DetailForm.fl_status" disabled></el-input> -->
          <el-radio v-model="DetailForm.fl_status" label="0" disabled>隐藏</el-radio>
          <el-radio v-model="DetailForm.fl_status" label="1" disabled>显示</el-radio>
        </el-form-item>
        <el-form-item label="专题ID">
          <el-input v-model="DetailForm.fl_topic" disabled></el-input>
        </el-form-item>
        <el-form-item label="链接">
          <el-input v-model="DetailForm.fl_url" disabled></el-input>
        </el-form-item>
      </el-form>
    </el-dialog>

    <!-- 编辑的模态框 -->
    <el-dialog
      v-elDragDialog
      :visible.sync="EditDialogTableVisible"
      title="友链管理编辑" 
      @closed="EditDialogClosed('EditForm')"
      :close-on-click-modal="false">
      <!-- 表单 -->
      <el-form ref="EditForm" :model="EditForm" label-width="80px" :rules="EditRules">
        <el-form-item label="序号" prop="fl_id">
          <el-input v-model="EditForm.fl_id"></el-input>
        </el-form-item>
        <el-form-item label="名称" prop="fl_name">
          <el-input v-model="EditForm.fl_name"></el-input>
        </el-form-item>
        <el-form-item label="状态" prop="fl_status">
          <!-- <el-input v-model="EditForm.fl_status"></el-input> -->
          <el-radio v-model="EditForm.fl_status" label="0">隐藏</el-radio>
          <el-radio v-model="EditForm.fl_status" label="1">显示</el-radio>
        </el-form-item>
        <el-form-item label="专题ID" prop="fl_topic">
          <el-input v-model="EditForm.fl_topic"></el-input>
        </el-form-item>
        <el-form-item label="链接" prop="fl_url">
          <el-input v-model="EditForm.fl_url"></el-input>
        </el-form-item>
        <el-form-item>
            <el-button type="primary" @click="submitEditForm('EditForm')">提交</el-button>
            <el-button @click="cancleEditForm('EditForm')">取消</el-button>
        </el-form-item>
      </el-form>
    </el-dialog>

    <!-- 新增的模态框 -->
    <el-dialog 
      v-elDragDialog
      :visible.sync="AddDialogTableVisible"
      title="新建友链管理" 
      @closed="AddDialogClosed('AddForm')"
      :close-on-click-modal="false">
      <!-- 表单 -->
      <el-form ref="AddForm" :model="AddForm" label-width="80px" :rules="AddRules">
        <el-form-item label="序号" prop="fl_id">
          <el-input v-model="AddForm.fl_id"></el-input>
        </el-form-item>
        <el-form-item label="名称" prop="fl_name">
          <el-input v-model="AddForm.fl_name"></el-input>
        </el-form-item>
        <el-form-item label="状态" prop="fl_status">
          <!-- <el-input v-model="AddForm.fl_status"></el-input> -->
          <el-radio v-model="AddForm.fl_status" label="0">隐藏</el-radio>
          <el-radio v-model="AddForm.fl_status" label="1">显示</el-radio>
        </el-form-item>
        <el-form-item label="专题ID" prop="fl_topic">
          <el-input v-model="AddForm.fl_topic"></el-input>
        </el-form-item>
        <el-form-item label="链接" prop="fl_url">
          <el-input v-model="AddForm.fl_url"></el-input>
        </el-form-item>
        <el-form-item>
            <el-button type="primary" @click="submitAddForm('AddForm')">提交</el-button>
            <el-button @click="cancleAddForm('AddForm')">取消</el-button>
        </el-form-item>
      </el-form>
    </el-dialog>
  </div>
</template>

<script>
// 引入接口
import api from '@/api/api.js'
// 获取token
import { getToken , removeToken } from '@/utils/auth'
// 引用拖拽
import elDragDialog from '@/directive/el-dragDialog';

export default {
  name: 'friendchain',
  directives: { elDragDialog }, // 拖拽指令
  data() {
      return {
          loading : true , // 加载条
          tableData : [],
          total: 0, // 分页总条数
          start: 0, // 默认第一页
          limit: 10,  // 每页10条

          // 查看详情的数据
          DetailDialogTableVisible : false, // 详情框默认的模态框
          DetailForm : {
            fl_id : '',
            fl_name : '',
            fl_status : '',
            fl_topic : '',
            fl_url : ''
          },

          // 编辑的数据
          EditDialogTableVisible : false, // 编辑框默认的模态框
          EditForm : {
            fl_id : '',
            fl_name : '',
            fl_status : '',
            fl_topic : '',
            fl_url : ''
          },
          EditRules : {
            fl_id : [{required: true,message : '请输入序号', trigger: 'blur'}],
            fl_name : [{required: true,message : '请输入名称', trigger: 'blur'}],
            fl_status : [{required: true,message : '请选择状态', trigger: 'blur'}],
            fl_topic : [{required: true,message : '请输入专题ID', trigger: 'blur'}],
            fl_url : [{required: true,message : '请输入链接', trigger: 'blur'}],
          },

          // 新建的数据
          AddDialogTableVisible : false,
          AddForm : {
            fl_id : '',
            fl_name : '',
            fl_status : '',
            fl_topic : '',
            fl_url : ''
          },
          AddRules : {
            fl_id : [{required: true,message : '请输入序号', trigger: 'blur'}],
            fl_name : [{required: true,message : '请输入名称', trigger: 'blur'}],
            fl_status : [{required: true,message : '请选择状态', trigger: 'blur'}],
            fl_topic : [{required: true,message : '请输入专题ID', trigger: 'blur'}],
            fl_url : [{required: true,message : '请输入链接', trigger: 'blur'}],
          },
      }
  },
  methods : {
    getInfo() {
      this.$http.get(`${api.dev}/p/main/friendlink/show`,{params : {access_token: getToken() , start : this.start, limit : this.limit}}).then(res => {
        if(res.body.code == 200) {
          // 先过滤
          res.body.content.records.forEach( i => {
            if(i.fl_status == 0) {
              i.fl_status = '隐藏'
            }else if(i.fl_status == 1) {
              i.fl_status = '显示'
            }
          })
          this.tableData = res.body.content.records;
          this.total = res.body.content.total;
          this.loading = false;
        }else if(res.body.code == 500) {
          this.$message({
            message : res.body.msg,
            type : 'error'
          })
          removeToken();
          setTimeout(function () {
            window.location.href = '/stwhy';
          },2000)
        }
      })
    },
    // 处理查看操作
    handleDetail(row) {
          // 开启加载器
          const loading = this.$loading({
                lock: true,
                text: 'Loading',
                spinner: 'el-icon-loading',
                background: 'rgba(0, 0, 0, 0.7)'
          });
          this.$http.get(`${api.dev}/p/main/friendlink/select`,{params : {access_token : getToken() , fl_id : row.fl_id}}).then(res => {
            if(res.body.code == 200) {
                  loading.close();
                  this.DetailDialogTableVisible = true;

                  this.DetailForm.fl_id = res.body.content.fl_id;
                  this.DetailForm.fl_name = res.body.content.fl_name;
                  this.DetailForm.fl_status = (res.body.content.fl_status).toString();
                  this.DetailForm.fl_topic = res.body.content.fl_topic;
                  this.DetailForm.fl_url = res.body.content.fl_url;
            }else if(res.body.code == 500) {
              this.$message({
                message: res.body.msg,
                type: 'error'
              });
              removeToken();
              setTimeout(function () {
                window.location.href = '/stwhy';
              },2000)
            } 
          })
    },
    // 处理编辑操作
    handleEdit(row) {
            // 开启加载器
            const loading = this.$loading({
                lock: true,
                text: 'Loading',
                spinner: 'el-icon-loading',
                background: 'rgba(0, 0, 0, 0.7)'
            });
            this.$http.get(`${api.dev}/p/main/friendlink/select`,{params : {access_token : getToken() , fl_id : row.fl_id}}).then(res => {
              if(res.body.code == 200) {
                  loading.close();
                  this.EditDialogTableVisible = true;

                  this.EditForm.fl_id = res.body.content.fl_id;
                  this.EditForm.fl_name = res.body.content.fl_name;
                  this.EditForm.fl_status = (res.body.content.fl_status).toString();
                  this.EditForm.fl_topic = res.body.content.fl_topic;
                  this.EditForm.fl_url = res.body.content.fl_url;
              }else if (res.body.code == 500) {
                this.$message({
                  message: res.body.msg,
                  type: 'error'
                });
                removeToken();
                setTimeout(function () {
                  window.location.href = '/stwhy';
                },2000)
              }
            })
    },
    // 处理删除操作
    handleDelete(row) {
      console.log(row);
      this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
      }).then(() => {
        this.loading = true;
        this.$http.post(`${api.dev}/p/main/friendlink/delete`,{access_token : getToken() , fl_id : row.fl_id},{emulateJSON : true}).then(res => {
          if(res.body.code == 200) {
            this.$message({
                message: '删除成功',
                type: 'success'
            });
            this.getInfo();
          }else if(res.body.code == 500) {
            this.$message({
                message : res.body.msg,
                type : 'error'
            })
            removeToken();
            setTimeout(function () {
              window.location.href = '/stwhy';
            },2000)
          }
        })
      })
    },
    // 提交编辑操作
    submitEditForm(formName){
      this.$refs[formName].validate((valid) => {
        if(valid) {
                    // 开启加载器
                    const loading = this.$loading({
                        lock: true,
                        text: '正在保存中...',
                        spinner: 'el-icon-loading',
                        background: 'rgba(0, 0, 0, 0.7)'
                    });
                    var formdata = new FormData();
                    formdata.append('access_token',getToken());
                    formdata.append('fl_id',this.EditForm.fl_id);
                    formdata.append('fl_name',this.EditForm.fl_name);
                    formdata.append('fl_status',this.EditForm.fl_status);
                    formdata.append('fl_topic',this.EditForm.fl_topic);
                    formdata.append('fl_url',this.EditForm.fl_url);
                    this.$http.post(`${api.dev}/p/main/friendlink/update`,formdata,{emulateJSON : true}).then(res => {
                      if(res.body.code == 200) {
                            loading.close();
                            this.EditDialogTableVisible = false;
                            this.$refs[formName].clearValidate(); // 清除表单验证规则
                            this.$message({
                                message: res.body.msg,
                                type: 'success'
                            });
                            this.loading = true;
                            this.getInfo();
                      }else if (res.body.code == 500) {
                            loading.close();
                            this.$message({
                                message : res.body.msg,
                                type : 'error'
                            })
                      }
                    })
        }else {
          console.log('error submit');
          return false;
        }
      })
    },
    // 取消编辑操作
      cancleEditForm(formName) {
            this.EditDialogTableVisible = false;
            this.$refs[formName].clearValidate(); // 清除表单验证规则
      },
      // 提交新增操作
      submitAddForm(formName) {
        this.$refs[formName].validate((valid) => {
          if(valid) {
                    // 开启加载器
                    const loading = this.$loading({
                        lock: true,
                        text: '正在保存中...',
                        spinner: 'el-icon-loading',
                        background: 'rgba(0, 0, 0, 0.7)'
                    });
                    var formdata = new FormData();
                    formdata.append('access_token',getToken());
                    formdata.append('fl_id',this.AddForm.fl_id);
                    formdata.append('fl_name',this.AddForm.fl_name);
                    formdata.append('fl_status',this.AddForm.fl_status);
                    formdata.append('fl_topic',this.AddForm.fl_topic);
                    formdata.append('fl_url',this.AddForm.fl_url);
                    this.$http.post(`${api.dev}/p/main/friendlink/save`,formdata,{emulateJSON: true}).then(res => {
                      if(res.body.code == 200) {
                            loading.close();
                            this.$message({
                                message: res.body.msg,
                                type: 'success'
                            })
                            this.AddDialogTableVisible = false;
                            this.loading = true;
                            this.getInfo();
                            this.$refs[formName].resetFields(); // 清除表单验证规则 清空表单数据
                      }else if (res.body.code == 500) {
                            this.$message({
                                message: res.body.msg,
                                type : 'error'
                            })
                      }
                    })
          }else {
            console.log('error submit');
            return false;
          }
        })
      },
      // 关闭编辑框
      EditDialogClosed(formName) {
        this.$refs[formName].clearValidate(); // 清除表单验证规则
      },
      // 取消新增
      cancleAddForm(formName) {
            this.AddDialogTableVisible = false;
            this.$refs[formName].clearValidate(); // 清除表单验证规则
      },
      // 关闭新增框
      AddDialogClosed(formName) {
          this.$refs[formName].resetFields(); // 清除表单验证规则
      },
  },
  created() {
    this.getInfo();
  }
}
</script>

<style lang="stylus" scoped>
.AddVillageBtn 
  margin-bottom 10px
</style>
