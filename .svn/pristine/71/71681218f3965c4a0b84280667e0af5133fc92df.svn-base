<template>
  <div>
    <el-form ref="AddForm" :model="AddForm" label-width="80px" :rules="AddRules">
        <el-row type="flex" class="row-bg">
          <el-col :span="7">
            <el-form-item label="名称" prop="b_name">
            <el-input v-model="AddForm.b_name"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="7">
                <el-form-item label="代码" prop="b_code">
                    <el-input v-model="AddForm.b_code"></el-input>
                </el-form-item>
          </el-col>
        </el-row>
        <el-row type="flex" class="row-bg">
          <el-col :span="7">
            <el-form-item label="经度" prop="b_lon">
            <el-input v-model="AddForm.b_lon"></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="7">
            <el-form-item label="纬度" prop="b_lat">
            <el-input v-model="AddForm.b_lat"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row type="flex" class="row-bg">
          <el-col :span="7">
            <!-- <el-form-item label="负责人" prop="b_director">
            <el-input v-model="AddForm.b_director"></el-input>
            </el-form-item> -->
            <el-form-item label="负责人" prop="b_director">
                <el-select v-model="AddForm.b_director" multiple placeholder="请选择">
                <el-option
                    v-for="item in selectAdminOptions"
                    :key="item.id"
                    :label="item.name"
                    :value="item.id">
                </el-option>
                </el-select>
            </el-form-item>
          </el-col>
          <el-col :span="7">
            <!-- <el-form-item label="地区ID" prop="b_area">
            <el-input v-model="AddForm.b_area"></el-input>
            </el-form-item> -->
            <el-form-item label="地区名称" prop="b_area">
                <el-select v-model="AddForm.b_area" placeholder="请选择">
                <el-option
                    v-for="item in selectAreaOptions"
                    :key="item.id"
                    :label="item.name"
                    :value="item.id">
                </el-option>
                </el-select>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row type="flex" class="row-bg">
          <el-col :span="14">
            <el-form-item label="描述" prop="b_desc">
            <el-input type="textarea" :rows="4" v-model="AddForm.b_desc"></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row type="flex" class="row-bg">
          <el-col :span="14">
            <el-form-item label="图片" prop="b_photo">
            <el-upload
                :class="{disabled:uploadDisabled}"
                :limit="1"
                :action="AddUploadUrl"
                list-type="picture-card"
                :on-success="handleAddUploadSuccess"
                :on-preview="handleAddPreview"
                :on-remove="handleAddUploadRemove"
                :file-list="AddUploadFileList">
                <i class="el-icon-plus"></i>
            </el-upload>
            <el-dialog :visible.sync="AddPreviewDialogVisible">
                <img width="100%" :src="AddPreviewDialogImageUrl" alt="">
            </el-dialog>
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>

      <el-footer>
        <el-button type="primary" @click="goBack" size="small" icon="el-icon-arrow-left">返回</el-button>
        <el-button type="primary" @click="AddSave('AddForm')" size="small" icon="el-icon-edit-outline">保存</el-button>
      </el-footer>
  </div>
</template>

<script>
// 引入接口
import api from '@/api/api.js'
// 获取token
import { getToken , removeToken } from '@/utils/auth'

export default {
  name: 'componentspage1',
  data() {
      return {
          AddForm : {
            b_code : '',
            b_lat : '',
            b_director : [],
            b_desc : '',
            b_photo : [],
            b_id : '',
            b_name : '',
            b_area : '',
            b_lon : '',
          },
          AddRules : {
              b_name : [{required: true,message : '请输入名称', trigger: 'blur'}],
              b_lon : [{required: true,message : '请输入经度', trigger: 'blur'}],
              b_lat : [{required: true,message : '请输入纬度', trigger: 'blur'}],
              b_area : [{required: true,message : '请选择地区名称', trigger: 'change'}],
              b_photo : [{required: true,message : '请选择图片', trigger: 'change'}],
          },
          selectAdminOptions : [], // 负责人
          selectAreaOptions : [], // 地区

          AddUploadUrl : `${api.dev}/p/main/upload/image`,  // 上传图片的地址
          AddUploadFileList : [],
          AddPreviewDialogVisible : false,
          AddPreviewDialogImageUrl : ''
      }
  },
  methods : {
      // 获取负责人
      getSelectAdmin() {
        this.$http.get(`${api.dev}/p/main/drop/selectAdmin`,{params: {access_token: getToken(), type : 0}}).then(res => {
          if(res.body.code == 200) {
            this.selectAdminOptions = res.body.content;
          }else if(res.body.code == 500) {
            this.$message({
              message: res.body.msg,
              type: 'error'
            });
            removeToken();
            setTimeout(function () {
              window.location.href = '/stwhy';
            },2000)
          }
        })
      },
      getSelectArea() {
          this.$http.get(`${api.dev}/p/main/drop/selectArea`,{params: {access_token: getToken(), type : 0}}).then(res => {
                if(res.body.code == 200) {
                    this.selectAreaOptions = res.body.content;
                }else if(res.body.code == 500) {
                    this.$message({
                        message: res.body.msg,
                        type: 'error'
                    });
                    removeToken();
                    setTimeout(function () {
                        window.location.href = '/stwhy';
                    },2000)
                }
          })
      },
      // 上传成功时
    handleAddUploadSuccess(res,file,fileList) {
        this.AddUploadFileList.push({url: `${api.address}${res.content}`})
        this.AddForm.b_photo = res.content
        
    },
          // 放大图片
    handleAddPreview(file) {
        this.AddPreviewDialogVisible = true;
        this.AddPreviewDialogImageUrl = file.url;
    },
    // 删除图片
    handleAddUploadRemove(file,fileList) {
        for(var i = 0 ; i < this.AddUploadFileList.length ; i++) {
            if(file.url == this.AddUploadFileList[i].url) {
                this.AddUploadFileList.splice(i,1)
            }
        }
       
    //    var reg = new RegExp(`${api.address}`);
    //    file.url = file.url.replace(reg,'');

        // for(var j = 0 ; j < this.AddForm.b_photo.length ; j++) {
        //     if(file.url == this.AddForm.b_photo[j]) {
        //         this.AddForm.b_photo.splice(j,1)
        //     }
        // }

        this.AddForm.b_photo = ''
    },
    // 返回
    goBack() {
        this.$router.back(-1);
    },
    // 保存
    AddSave(formName) {
        this.$refs[formName].validate((valid) => {
            if(valid) {
                // 开启加载器
                const loading = this.$loading({
                    lock: true,
                    text: '正在保存中...',
                    spinner: 'el-icon-loading',
                    background: 'rgba(0, 0, 0, 0.7)'
                });
                var formdata = new FormData();
                formdata.append('access_token',getToken());
                formdata.append('b_name',this.AddForm.b_name);
                formdata.append('b_photo',this.AddForm.b_photo);
                formdata.append('b_code',this.AddForm.b_code);
                formdata.append('b_desc',this.AddForm.b_desc);
                formdata.append('b_director',JSON.stringify(this.AddForm.b_director));
                formdata.append('b_area',this.AddForm.b_area);
                formdata.append('b_lon',this.AddForm.b_lon);
                formdata.append('b_lat',this.AddForm.b_lat);
                this.$http.post(`${api.dev}/p/main/village/save`,formdata,{emulateJSON:true}).then(res => {
                    if(res.body.code == 200) {
                        loading.close();
                        this.$message({
                            message: res.body.msg,
                            type: 'success'
                        });
                        this.$router.back(-1);
                    }else if(res.body.code == 500) {
                        loading.close();
                        this.$message({
                        message: res.body.msg,
                        type: 'error'
                        });
                    }else if(res.body.code == 510) {
                        this.$message({
                        message: res.body.msg,
                        type: 'error'
                        });
                        removeToken();
                        setTimeout(function () {
                        window.location.href = '/stwhy';
                        },2000)
                    }
                })
            }else {
                console.log('submit error');
                return false;
            }
        })
    }
  },
  created() {
      this.getSelectAdmin()
      this.getSelectArea()
  },
  computed : {
      uploadDisabled : function () {
          return this.AddForm.b_photo != ''
      }
  }
}
</script>

<style lang="stylus" scoped>
.el-footer 
    background-color #A3C0D1;
    color #333;
    line-height 60px;
    position absolute;
    width 100%;
    bottom 0;
    z-index 9999
</style>
