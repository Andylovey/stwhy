<template>
  <div>
      <el-form ref="EditForm" :model="EditForm" label-width="80px" :rules="EditRules" style="margin-top:10px;margin-bottom:60px;">
          <el-row type="flex" class="row-bg">
            <el-col :span="12">
                <el-form-item label="标题" prop="article.a_title">
                    <el-input v-model="EditForm.article.a_title"></el-input>
                </el-form-item>
            </el-col>
          </el-row>
          
          <el-row type="flex" class="row-bg">
            <el-col :span="12">
                <el-form-item v-for="item in EditForm.fields" :key="item.f_key" :label="item.f_name">
                    <el-input type="textarea" :rows="2" v-if="item.f_type==0" v-model="item.f_value"></el-input> 
                    <el-upload
                        v-if="item.f_type==1 && item.f_value!= null"
                        :action="uploadAddressCover"
                        list-type="picture-card"
                        name="file"
                        :limit="1"
                        ref="EditUpload"
                        :on-success="successEditUploadCover"
                        :on-remove="removeEditUploadCover"
                        :file-list="[{url:`${address}${item.f_value}`}]">
                        <i class="el-icon-plus"></i>
                    </el-upload>
                    <quill-editor ref="EditTextEditor"
                        v-if="item.f_type==2"
                        :content="item.f_value"
                        :options = "EditEditorOption"
                        v-model="item.f_value"
                        style="height:400px;overflow:scroll"
                        >
                    </quill-editor>
                    <div v-if="item.f_type==4" style="width:500px;height:300px;">
                        <video controls="controls" width="100%">
                            <source :src="item.f_value" type="video/ogg">
                            <source :src="item.f_value" type="video/webm">
                            <source :src="item.f_value" type="video/mp4">
                        </video>
                    </div>
                </el-form-item>
            </el-col>
          </el-row>
        </el-form>

        <el-footer>
            <el-button type="primary" @click="goBack" size="small" icon="el-icon-arrow-left">返回</el-button>
            <el-button type="primary" @click="EditSave('EditForm')" size="small" icon="el-icon-edit-outline">保存</el-button>
        </el-footer>
  </div>
</template>

<script>
// 引入接口
import api from '@/api/api.js'
// 获取token
import { getToken , removeToken } from '@/utils/auth'

// 引入富文本框插件
import { quillEditor } from 'vue-quill-editor'
import 'quill/dist/quill.core.css'
import 'quill/dist/quill.snow.css'
import 'quill/dist/quill.bubble.css'

export default {
  name: 'componentspage1',
  components : {
        quillEditor
  },
  data() {
      return { 
            EditForm : {
                article : {
                    a_title : '',
                    a_id : ''
                },
                fields : []
            },

            address : `${api.address}`,

            uploadAddressCover : `${api.dev}/p/main/upload/image`,  // 上传图片的地址

            EditEditorOption : {
                theme: 'snow',
                boundary: document.body, 
                modules: {
                    toolbar: [
                    ['bold', 'italic', 'underline', 'strike'],
                    ['blockquote', 'code-block'],
                    [{ 'header': 1 }, { 'header': 2 }],
                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                    [{ 'script': 'sub' }, { 'script': 'super' }],
                    [{ 'indent': '-1' }, { 'indent': '+1' }],
                    [{ 'direction': 'rtl' }],
                    [{ 'size': ['small', false, 'large', 'huge'] }],
                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                    [{ 'color': [] }, { 'background': [] }],
                    [{ 'font': [] }],
                    [{ 'align': [] }],
                    ['clean'],
                    ['link', 'image', 'video']
                    ]
                },
                placeholder: 'Insert text here ...',
                readOnly: true
            },
      }
  },
  methods : {
      goBack() {
        this.$router.back(-1);
      },
    getInfo() {
        this.$http.get(`${api.dev}/p/main/information/select`,{params: {access_token : getToken(),a_id : this.$route.params.id,c_id:this.$route.params.cid}}).then(res => {
            if(res.body.code == 200) {
                this.EditForm.article.a_title = res.body.content.article.a_title;
                this.EditForm.article.a_id = res.body.content.article.a_id;
                this.EditForm.fields = res.body.content.fields;
            }else if(res.body.code == 500) {
                this.$message({
                    message: res.body.msg,
                    type: 'error'
                });
                removeToken();
                setTimeout(function () {
                    window.location.href = '/stwhy';
                },2000)
            }
        })
    },
    successEditUploadCover(res,file,fileList) {
        this.EditForm.fields.forEach(item => {
            if(item.f_type == 1) {
                // item.f_value = `${api.address}${res.content}`
                item.f_value = `${res.content}`
            }
        })
    },
    removeEditUploadCover(file,fileList) {
        this.EditForm.fields.forEach(item => {
            if(item.f_type == 1) {
                // item = []
                item.f_value = ''
            }
        })
    },
    EditSave(formName) {
                // 开启加载器
                const loading = this.$loading({
                    lock: true,
                    text: '正在保存中...',
                    spinner: 'el-icon-loading',
                    background: 'rgba(0, 0, 0, 0.7)'
                });
                var formdata = new FormData();
                formdata.append('access_token',getToken());
                formdata.append('a_id',this.EditForm.article.a_id);
                formdata.append('a_title',this.EditForm.article.a_title);
                for(var i = 0 ; i < this.EditForm.fields.length ; i++) {
                    formdata.append(this.EditForm.fields[i].f_key,this.EditForm.fields[i].f_value);
                }
                this.$http.post(`${api.dev}/p/main/information/update`,formdata,{emulateJSON:true}).then(res => {
                    if(res.body.code == 200) {
                        loading.close();
                        this.$message({
                            message: res.body.msg,
                            type: 'success'
                        });
                        this.$router.back(-1);
                    }else if(res.body.code == 500) {
                        this.$message({
                            message: res.body.msg,
                            type: 'error'
                        });
                    }
                })
    }
  },
  created() {
      this.getInfo()
  },
  computed: {
        uploadDisabled:function() {
            return this.EditForm.b_photo != ''
        },
    },
}
</script>

<style lang="stylus" scoped>
.el-footer 
    background-color #A3C0D1;
    color #333;
    line-height 60px;
    position absolute;
    width 100%;
    bottom 0;
    z-index 9999
</style>
