<template>
	<div>
		<div class="margin-bottom-10">
			<el-select class="padding-right-12" v-model="searchID" slot="prepend" placeholder="请选择投稿ID" style="width:200px" clearable >
				<template v-for="item in searchIdList">
					<el-option :label="item.cl_id" :value="item.cl_id"></el-option>
				</template>
			</el-select>
			<el-input v-model="searchName" placeholder="请输入标题搜索" style="width:200px" @keyup.enter.native="getInfo('search')"></el-input>
			<el-button slot="append" icon="el-icon-search" type="primary" @keyup.enter="getInfo('search')" @click="getInfo('search')" style="margin-left:10px;">搜索</el-button>
		</div>
		<el-table
			v-if="permissionShow"
			v-loading="loading"
			element-loading-text="拼命加载中"
			element-loading-spinner="el-icon-loading"
			element-loading-background="rgba(0, 0, 0, 0.8)"
			:data="tableData"
			border
			style="width: 100%"
			height="calc(100% - 100px)">
			<el-table-column prop="cr_id" label="序号" sortable align="center"  min-width="90"></el-table-column>
			<el-table-column prop="cl_name" label="所属投稿活动名称" sortable align="center" min-width="180"></el-table-column>
			<el-table-column prop="cr_title" label="标题" sortable align="center" min-width="180"></el-table-column>
			<el-table-column prop="cr_author" label="作者" sortable align="center" min-width="140"></el-table-column>
			<el-table-column prop="cr_date" label="日期" sortable align="center" min-width="200"></el-table-column>
			<el-table-column prop="cr_createtime" label="创建时间" sortable align="center" min-width="200"></el-table-column>
			<el-table-column prop="cr_auditstatusText" label="审核状态" sortable align="center" min-width="140"></el-table-column>
			<el-table-column prop="cr_audittime" label="审核时间" sortable align="center" min-width="200"></el-table-column>
			<el-table-column prop="cr_publishstatusText" label="发布状态" sortable align="center" min-width="140"></el-table-column>
			<el-table-column prop="cr_publishtime" label="发布时间" sortable align="center" min-width="200"></el-table-column>
			<el-table-column prop="cr_img" label="图片地址" sortable align="center" min-width="260"></el-table-column>
			<el-table-column
				fixed="right"
				label="操作"
				align="center"
				min-width="180"
				v-if="permissionDetail || permissionAudit || permissionRelease">
				<template slot-scope="scope">
					<el-button v-if="permissionDetail" @click="handleDetail(scope.row)" type="text" size="small">查看</el-button>
					<el-button v-if="permissionAudit" @click="handleAudit(scope.row)" type="text" size="small" :disabled="scope.row.cr_auditstatus">审核</el-button>
					<el-button v-if="permissionRelease" @click="handleRelease(scope.row)" type="text" size="small" :disabled="scope.row.cr_publishstatus">发布</el-button>
				</template>
			</el-table-column>
		</el-table>

		<!-- 分页 -->
		<div id="pagination">
			<el-pagination
				background
				layout="prev, pager, next"
				:total="total"
				:page-size="limit"
				@current-change="handleCurrentChange">
			</el-pagination>
		</div>

		<!-- 查看模态框 -->
		<el-dialog 
			:visible.sync="DetailDialogTableVisible"
			title="查看报名活动详情" 
			top="40px"
			width="620px"
			@closed="cancleDetailForm('DetailForm')"
			:close-on-click-modal="false">
			<el-form ref="DetailForm" :model="DetailForm" label-width="140px" disabled>
				<el-form-item label="所属投稿活动名称" prop="cl_name">
					<el-input v-model="DetailForm.cl_name"></el-input>
				</el-form-item>
				<el-form-item label="标题" prop="cr_title">
					<el-input v-model="DetailForm.cr_title"></el-input>
				</el-form-item>
				<el-form-item label="作者" prop="cr_author">
					<el-input v-model="DetailForm.cr_author"></el-input>
				</el-form-item>
				<el-form-item label="日期" prop="cr_date">
					<el-date-picker type="datetime"v-model="DetailForm.cr_date" style="width: 100%;"></el-date-picker>
				</el-form-item>
				<el-form-item label="创建时间" prop="cr_createtime">
					<el-date-picker type="datetime"v-model="DetailForm.cr_createtime" style="width: 100%;"></el-date-picker>
				</el-form-item>
				<el-form-item label="审核状态" prop="cr_auditstatus">
					<el-radio v-model="DetailForm.cr_auditstatus" label="1">已审核</el-radio>
					<el-radio v-model="DetailForm.cr_auditstatus" label="0">未审核</el-radio>
				</el-form-item>
				<el-form-item label="审核时间" prop="cr_audittime">
					<el-date-picker type="datetime"v-model="DetailForm.cr_audittime" style="width: 100%;"></el-date-picker>
				</el-form-item>
				<el-form-item label="发布状态" prop="cr_publishstatus">
					<el-radio v-model="DetailForm.cr_publishstatus" label="1">已发布</el-radio>
					<el-radio v-model="DetailForm.cr_publishstatus" label="0">未发布</el-radio>
				</el-form-item>
				<el-form-item label="发布时间" prop="cr_publishtime">
					<el-date-picker type="datetime"v-model="DetailForm.cr_publishtime" style="width: 100%;"></el-date-picker>
				</el-form-item>
				<el-form-item label="图片" prop="cr_img">
					<el-input v-model="DetailForm.cr_img" v-show="false"></el-input>
					<el-upload
						class="avatar-uploader disabled"
						action=""
					>
						<img v-if="DetailForm.cr_img" :src="DetailForm.cr_img" class="avatar">
					</el-upload>
				</el-form-item>
			</el-form>
		</el-dialog>
	</div>
</template>

<script>
// 引入接口
import api from '@/api/api.js'
// 获取token
import { getToken , removeToken } from '@/utils/auth'
// 时间过滤器
import {formatDate} from '@/filter/date.js'

export default {
	name: 'userContributeMGT',
	data() {
		return {
			/* 
			 * tableData: 表格数据
			 * loading: 加载状态（默认为true）
			 * total: 总条数（table数据总长度）
			 * start: 表格分页（默认第一页）
			 * limit: 每页显示条数
			 * searchName: 搜索（标题）
			 * searchID: 搜索（投稿ID）,
			 */
			tableData : [],
			loading : true,
			total: 0,
			start : 0,
			limit : 10,
			searchName: '',
			searchID: '',
			searchIdList: [],

			/* 查看详情部分 */
			DetailDialogTableVisible : false,
			DetailForm : {
				bl_id : '',
				bl_name : '',
				bl_place : '',
				bl_starttime : '',
				bl_endtime : '',
				bl_signtime : '',
				bl_limit : ''
			},
			currentForm: 'AddForm', // 当前表单

			permissionShow: false, // 默认为false,根据权限是否显示
			permissionDetail: false, // 默认为false,根据权限是否新建
			permissionAudit: false, // 默认为false,根据权限是否能审核
			permissionRelease: false, // 默认为false,根据权限是否能发布
		}
	},
	methods : {
		getLimit(){
			this.$http.post(
				`${api.dev}/p/main/preference/show`,
				{
					access_token: getToken(),
				},
				{emulateJSON : true}
			).then(res => {
				if(res.body.code == 200) {
					this.limit = (res.body.content) ? res.body.content.p_pagesize : 10;
					this.getInfo();
				}else if(res.body.code == 500) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					this.getInfo();
				}else if(res.body.code == 510) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					removeToken();
					setTimeout(function () {
						this.$router.push({path: '/login'})
					},2000)
				}
			})
		},
		/* 获取权限 */
		getSubPermission() {
			this.$http.get(
				`${api.dev}/p/permission/getSub`,
				{
					params:{
						access_token:getToken(),
						p_id: this.$route.params.id
					}
				}
			).then(res => {
				if(res.body.code == 200) {
					res.body.content.forEach(item => {
						if(item.p_name.indexOf('显示') > -1) {
							this.permissionShow = true;
						}else if(item.p_name.indexOf('查看') > -1) {
							this.permissionDetail = true;
						}else if(item.p_name.indexOf('审核') > -1) {
							this.permissionAudit = true;
						}else if(item.p_name.indexOf('发布') > -1) {
							this.permissionRelease = true;
						}
					})
				}else if(res.body.code == 500) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
				}else if(res.body.code == 510) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					removeToken();
					setTimeout(function () {
						this.$router.push({path: '/login'})
					},2000)
				}
			})
		},
		/* 获取投稿ID */
		getID(){
			this.$http.post(
				`${api.dev}/p/contribute/list/selectAll`,
				{
					access_token: getToken()
				},
				{emulateJSON : true}
			).then(res => {
				if(res.body.code == 200) {
					res.body.content.forEach(i => {
						
					});
					this.searchIdList = res.body.content;
				}else if(res.body.code == 500) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
				}else if(res.body.code == 510) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					removeToken();
					setTimeout(function () {
						this.$router.push({path: '/login'})
					},2000)
				}
			})
		},
		/* 表格数据加载 */
		getInfo(searchName){
			//console.log('searchName:'+searchName);
			var searchVal = (searchName == 'search') ? this.searchName : '';
			var searchId = (searchName == 'search') ? this.searchID : '';
			this.$http.post(
				`${api.dev}/p/contribute/record/show`,
				{
					access_token: getToken(),
					start: this.start,
					limit: this.limit,
					id1: searchId,
					name1: searchVal
				},
				{emulateJSON : true}
			).then(res => {
				if(res.body.code == 200) {
					res.body.content.records.forEach(i => {
						i.cr_createtime = formatDate(new Date(i.cr_createtime) , 'yyyy-MM-dd hh:mm:ss');
						i.cr_publishtime = formatDate(new Date(i.cr_publishtime) , 'yyyy-MM-dd hh:mm:ss');
						i.cr_date = formatDate(new Date(i.cr_date) , 'yyyy-MM-dd hh:mm:ss');
						i.cr_audittime = formatDate(new Date(i.cr_audittime) , 'yyyy-MM-dd hh:mm:ss');
						i.cr_auditstatusText = (i.cr_auditstatus) ? '已审核' : '未审核';
						i.cr_publishstatusText = (i.cr_publishstatus) ? '已发布' : '未发布';
					});
					this.tableData = res.body.content.records;
					this.total = res.body.content.total;
					this.loading = false;
				}else if(res.body.code == 500) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
				}else if(res.body.code == 510) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					removeToken();
					setTimeout(function () {
						this.$router.push({path: '/login'})
					},2000)
				}
			})
		},
		/* 详情加载 */
		handleDetail(row) {
			this.$http.post(
				`${api.dev}/p/contribute/record/select`,
				{
					access_token: getToken(),
					cr_id: row.cr_id
				},
				{emulateJSON : true}
			).then(res => {
				if(res.body.code == 200) {
					var data = res.body.content;
						data.cr_createtime = formatDate(new Date(data.cr_createtime) , 'yyyy-MM-dd hh:mm:ss');
						data.cr_publishtime = formatDate(new Date(data.cr_publishtime) , 'yyyy-MM-dd hh:mm:ss');
						data.cr_date = formatDate(new Date(data.cr_date) , 'yyyy-MM-dd hh:mm:ss');
						data.cr_audittime = formatDate(new Date(data.cr_audittime) , 'yyyy-MM-dd hh:mm:ss');
						data.cr_img = `${api.address}${data.cr_img}`;
						data.cr_auditstatus = (data.cr_auditstatus) ? '1' : '0';
						data.cr_publishstatus = (data.cr_publishstatus) ? '1' : '0';
					this.DetailForm = data;
					this.DetailDialogTableVisible = true;
				}else if(res.body.code == 500) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
				}else if(res.body.code == 510) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					removeToken();
					setTimeout(function () {
						this.$router.push({path: '/login'})
					},2000)
				}
			})
		},
		/* 审核 */
		handleAudit(row){
			this.$http.post(
				`${api.dev}/p/contribute/record/audit`,
				{
					access_token : getToken() ,
					cr_id : row.cr_id
				},
				{emulateJSON : true}
			).then(res => {
				if(res.body.code == 200) {
					this.$message({
						message: '审核成功',
						type: 'success'
					});
					this.getInfo();
				}else if(res.body.code == 500) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					this.loading = false;
				}else if(res.body.code == 510) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					removeToken();
					setTimeout(function () {
						this.$router.push({path: '/login'})
					},2000)
				}
			})
		},
		/* 发布 */
		handleRelease(row){
			this.$http.post(
				`${api.dev}/p/contribute/record/publish`,
				{
					access_token : getToken() ,
					cr_id : row.cr_id
				},
				{emulateJSON : true}
			).then(res => {
				if(res.body.code == 200) {
					this.$message({
						message: '发布成功',
						type: 'success'
					});
					this.getInfo();
				}else if(res.body.code == 500) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					this.loading = false;
				}else if(res.body.code == 510) {
					this.$message({
						message: res.body.msg,
						type: 'error'
					});
					removeToken();
					setTimeout(function () {
						this.$router.push({path: '/login'})
					},2000)
				}
			})
		},
		/* 取消查看 */
		cancleDetailForm(formName) {
			this.DetailDialogTableVisible = false;
		},
		
		/* 分页 */
		handleCurrentChange(val) {
			this.loading = true;
			this.start = this.limit * (val - 1);
			this.getInfo();
		}
	},
	created() {
		this.getSubPermission();
		this.getID();
		this.getLimit();
	}
}
</script>


<style lang="stylus" scoped>
#pagination
	margin-top 10px
.margin-bottom-10
	margin-bottom 10px
.padding-right-12
	padding-right 12px

</style>

<style>
  .avatar-uploader .el-upload {
    border: 1px dashed #d9d9d9;
    border-radius: 6px;
    cursor: pointer;
    position: relative;
    overflow: hidden;
  }
  .avatar-uploader .el-upload:hover {
    border-color: #41B883;
  }
  .avatar-uploader.disabled .el-upload{
  	border-color: #d9d9d9!important;
	cursor: not-allowed!important;
  }
  .avatar-uploader-icon {
    font-size: 28px;
    color: #8c939d;
    width: 178px;
    height: 178px;
    line-height: 178px;
    text-align: center;
  }
  .avatar {
    width: 178px;
    height: 178px;
    display: block;
  }
</style>
