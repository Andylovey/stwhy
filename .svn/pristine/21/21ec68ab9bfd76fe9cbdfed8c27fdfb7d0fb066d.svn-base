<template>
  <div>
      <el-form ref="AddForm" :model="AddForm" label-width="80px" :rules="AddRules" style="margin-top:10px;margin-bottom:60px;">
          <el-row type="flex" class="row-bg">
            <el-col :span="12">
                <el-form-item label="标题" prop="article.a_title">
                    <el-input v-model="AddForm.article.a_title"></el-input>
                </el-form-item>
            </el-col>
          </el-row>
          
          <el-row type="flex" class="row-bg">
            <el-col :span="12">
                <el-form-item v-for="item in AddForm.fields" :key="item.f_key" :label="item.f_name">
                    <el-input type="textarea" :rows="2" v-if="item.f_type==0" v-model="item.f_value"></el-input> 
                    <el-upload
                        v-if="item.f_type==1"
                        :class="{disabled:uploadDisabled}"
                        :action="uploadAddressCover"
                        list-type="picture-card"
                        name="file"
                        :limit="1"
                        ref="AddUpload"
                        :on-success="successAddUploadCover"
                        :on-remove="removeAddUploadCover">
                        <i class="el-icon-plus"></i>
                    </el-upload>
                    <quill-editor ref="AddTextEditor"
                        v-if="item.f_type==2"
                        :content="item.f_value"
                        :options = "AddEditorOption"
                        v-model="item.f_value"
                        style="height:400px;overflow:scroll"
                        >
                    </quill-editor>
                    <!-- <div v-if="item.f_type==4" style="width:500px;height:300px;"> -->
                        <!-- <video controls="controls" width="100%">
                            <source :src="item.f_value" type="video/ogg">
                            <source :src="item.f_value" type="video/webm">
                            <source :src="item.f_value" type="video/mp4">
                        </video> -->
                    <!-- </div> -->
                    <div v-if="item.f_type==4">
                        <el-upload class="avatar-uploader el-upload--text" 
                            :action="uploadAddressVideo" 
                            :show-file-list="false" 
                            :on-progress="uploadVideoProcess"
                            :on-success="handleVideoSuccess" 
                            :before-upload="beforeUploadVideo">
                            <video v-if="item.f_value !='' && videoFlag == false" :src="`${address}${item.f_value}`" class="avatar" controls="controls">您的浏览器不支持视频播放</video>
                            <i v-else-if="item.f_value =='' && videoFlag == false" class="el-icon-plus avatar-uploader-icon"></i>
                            <el-progress v-if="videoFlag == true" type="circle" :percentage="videoUploadPercent" style="margin-top:30px;"></el-progress>
                        </el-upload>
                    </div>
                </el-form-item>
            </el-col>
          </el-row>
        </el-form>

        <el-footer>
            <el-button type="primary" @click="goBack" size="small" icon="el-icon-arrow-left">返回</el-button>
            <el-button type="primary" @click="AddSave('AddForm')" size="small" icon="el-icon-edit-outline">保存</el-button>
        </el-footer>
  </div>
</template>

<script>
// 引入接口
import api from '@/api/api.js'
// 获取token
import { getToken , removeToken } from '@/utils/auth'

// 引入富文本框插件
import { quillEditor } from 'vue-quill-editor'
import 'quill/dist/quill.core.css'
import 'quill/dist/quill.snow.css'
import 'quill/dist/quill.bubble.css'

export default {
  name: 'componentspage1',
  components : {
        quillEditor
  },
  data() {
      return { 
            AddForm : {
                article : {
                    a_title : '',
                    a_id : ''
                },
                fields : []
            },

            address : `${api.address}`,

            uploadAddressCover : `${api.dev}/p/main/upload/image`,  // 上传图片的地址
            uploadAddressVideo : `${api.dev}/p/main/upload/video`,  // 上传视频的地址

            videoFlag : false,
            videoUploadPercent : 0,

            AddRules : {
                article : {
                    a_title : [{required: true,message : '请输入标题', trigger: 'blur'}]
                }
            },
            AddEditorOption : {
                theme: 'snow',
                boundary: document.body, 
                modules: {
                    toolbar: [
                    ['bold', 'italic', 'underline', 'strike'],
                    ['blockquote', 'code-block'],
                    [{ 'header': 1 }, { 'header': 2 }],
                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                    [{ 'script': 'sub' }, { 'script': 'super' }],
                    [{ 'indent': '-1' }, { 'indent': '+1' }],
                    [{ 'direction': 'rtl' }],
                    [{ 'size': ['small', false, 'large', 'huge'] }],
                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                    [{ 'color': [] }, { 'background': [] }],
                    [{ 'font': [] }],
                    [{ 'align': [] }],
                    ['clean'],
                    ['link', 'image', 'video']
                    ]
                },
                placeholder: 'Insert text here ...',
                readOnly: true
            },
      }
  },
  methods : {
      goBack() {
        this.$router.back(-1);
      },
    getInfo() {
        // this.$http.get(`${api.dev}/p/main/information/select`,{params: {access_token : getToken(),a_id : this.$route.params.id,c_id:this.$route.params.cid}}).then(res => {
        //     if(res.body.code == 200) {
        //         this.AddForm.article.a_title = res.body.content.article.a_title;
        //         this.AddForm.article.a_id = res.body.content.article.a_id;
        //         this.AddForm.fields = res.body.content.fields;
        //     }else if(res.body.code == 500) {
        //         this.$message({
        //             message: res.body.msg,
        //             type: 'error'
        //         });
        //         // removeToken();
        //         // setTimeout(function () {
        //         //     window.location.href = '/stwhy';
        //         // },2000)
        //     }
        // })
        this.$http.get(`${api.dev}/p/main/category/select`,{params: {access_token:getToken(),c_id : this.$route.params.id}}).then(res => {
            if(res.body.code == 200) {
                this.AddForm.fields = res.body.content.fields
            }else if(res.body.code == 500) {
                this.$message({
                    message: res.body.msg,
                    type: 'error'
                });
            }else {
                this.$message({
                    message: res.body.msg,
                    type: 'error'
                });
                removeToken();
                setTimeout(function () {
                    window.location.href = '/stwhy';
                },2000)
            }
        })
    },
    successAddUploadCover(res,file,fileList) {
        this.AddForm.fields.forEach(item => {
            if(item.f_type == 1) {
                // item.f_value = `${api.address}${res.content}`
                item.f_value = `${res.content}`
            }
        })
    },
    removeAddUploadCover(file,fileList) {
        // this.AddForm.fields.forEach(item => {
        //     if(item.f_type == 1) {
        //         item.f_value = ''
        //         item = []
        //     }
        // })

        
        this.AddForm.fields.forEach(item => {
            if(item.f_type == 1) {
                // console.log(item);
                item.f_value = ''
            }
        })
        
    },
    AddSave(formName) {
        this.$refs[formName].validate((valid) => {
            if(valid) {
                // 开启加载器
                const loading = this.$loading({
                    lock: true,
                    text: '正在保存中...',
                    spinner: 'el-icon-loading',
                    background: 'rgba(0, 0, 0, 0.7)'
                });
                var formdata = new FormData();
                formdata.append('access_token',getToken());
                formdata.append('a_title',this.AddForm.article.a_title);
                formdata.append('a_category',this.$route.params.id);
                // for(var i = 0 ; i < this.AddForm.fields.length ; i++) {
                //     formdata.append(this.AddForm.fields[i].f_key,this.AddForm.fields[i].f_value);
                // }
                for(var i = 0 ; i < this.AddForm.fields.length ; i++) {
                    if(this.AddForm.fields[i].f_value != null) {
                        formdata.append(this.AddForm.fields[i].f_key,this.AddForm.fields[i].f_value);
                    }    
                }
                this.$http.post(`${api.dev}/p/main/information/save`,formdata,{emulateJSON:true}).then(res => {
                    if(res.body.code == 200) {
                        loading.close();
                        this.$message({
                            message: res.body.msg,
                            type: 'success'
                        });
                        this.$router.back(-1);
                    }else if(res.body.code == 500) {
                        this.$message({
                            message: res.body.msg,
                            type: 'error'
                        });
                    }
                })
            }else {
                console.log('submit error');
                return false;
            }
        })
    },
    beforeUploadVideo(file) {
        const isLt10M = file.size / 1024 / 1024  < 10;
        if (['video/mp4', 'video/ogg', 'video/flv','video/avi','video/wmv','video/rmvb'].indexOf(file.type) == -1) {
            this.$message.error('请上传正确的视频格式');
            return false;
        }
        // if (!isLt10M) {
        //     this.$message.error('上传视频大小不能超过10MB哦!');
        //     return false;
        // }
    },
    uploadVideoProcess(event, file, fileList){
        this.videoFlag = true;
        this.videoUploadPercent = file.percentage.toFixed(0);
    },
    handleVideoSuccess(res, file) {                               
        this.videoFlag = false;
        this.videoUploadPercent = 0; 
        if(res.code == 200) {
            this.AddForm.fields.forEach(item => {
                if(item.f_type == 4) {
                    item.f_value = res.content
                }
            })
        }else if(res.code == 500){
            this.$message({
                message: res.msg,
                type: 'error'
            });
        }
    },
  },
  created() {
      this.getInfo()
  },
  computed: {
        uploadDisabled:function() {
            // return this.AddForm.b_photo != ''
            var flag;
            this.AddForm.fields.forEach(item => {
                if(item.f_type == 1 && item.f_value != '') {
                    // item = []
                    flag = true
                    return;
                }else {
                    flag = false
                }
            })
            return flag
        },
    },
}
</script>

<style lang="stylus" scoped>
.el-footer 
    background-color #A3C0D1;
    color #333;
    line-height 60px;
    position absolute;
    width 100%;
    bottom 0;
    z-index 9999
</style>
