<template>
  <div>
    <el-button type="primary" @click="AddDialogTableVisible = true" class="AddVillageBtn"><i class="el-icon-edit"></i> 新增</el-button>
    <el-table
        v-loading="loading"
        element-loading-text="拼命加载中"
        element-loading-spinner="el-icon-loading"
        element-loading-background="rgba(0, 0, 0, 0.8)"
        :data="tableData"
        border
        style="width: 100%"
        height="500">
        <el-table-column
        prop="t_sort"
        label="排序值"
        sortable
        align="center"
        width="150">
        </el-table-column>
        <el-table-column
        prop="t_status"
        label="发布"
        sortable
        align="center"
        width="150">
        </el-table-column>
        <el-table-column
        prop="t_name"
        label="名称"
        sortable
        align="center"
        width="150">
        </el-table-column>
        <el-table-column
        prop="t_code"
        label="代码"
        sortable
        align="center"
        width="150">
        </el-table-column>
        <el-table-column
        prop="t_type"
        label="类型"
        sortable
        align="center"
        width="150">
        </el-table-column>
        <el-table-column
        prop="t_id"
        label="序号"
        sortable
        align="center"
        width="150">
        </el-table-column>
        <el-table-column
        prop="t_cover"
        label="封面图"
        sortable
        align="center"
        width="150">
        <template slot-scope="scope">
          <img  :src="scope.row.t_cover" height="100px">
        </template>
        </el-table-column>
        <el-table-column
        prop="t_desc"
        label="描述"
        sortable
        align="center"
        width="150">
        </el-table-column>
        <el-table-column
        prop="t_url"
        label="链接"
        sortable
        align="center"
        width="150">
        </el-table-column>
        <el-table-column
        prop="t_indexpage"
        label="专题首页"
        sortable
        align="center"
        width="150">
        </el-table-column>
        <el-table-column
        prop="t_director"
        label="专题负责人"
        sortable
        align="center"
        width="150">
        </el-table-column>
        <el-table-column
        fixed="right"
        label="操作"
        align="center"
        width="150">
        <template slot-scope="scope">
            <el-button @click="handleDetail(scope.row)" type="text" size="small">查看</el-button>
            <el-button @click="handleEdit(scope.row)" type="text" size="small">编辑</el-button>
            <el-button @click="handleDelete(scope.row)" type="text" size="small">删除</el-button>
        </template>
        </el-table-column>
    </el-table>

    <!-- 查看详情的模态框 -->
    <el-dialog 
      :visible.sync="DetailDialogTableVisible"
      title="专题管理详情" 
      top="25px"
      :close-on-click-modal="false">
      <!-- 表单 -->
      <el-form ref="DetailForm" :model="DetailForm" label-width="80px">
        <el-form-item label="排序值">
          <el-input v-model="DetailForm.t_sort" disabled></el-input>
        </el-form-item>
        <el-form-item label="发布">
          <!-- <el-input v-model="DetailForm.t_status" disabled></el-input> -->
          <el-radio disabled v-model="DetailForm.t_status" label="0">未发布</el-radio>
          <el-radio disabled v-model="DetailForm.t_status" label="1">已发布</el-radio>
        </el-form-item>
        <el-form-item label="名称">
          <el-input v-model="DetailForm.t_name" disabled></el-input>
        </el-form-item>
        <el-form-item label="代码">
          <el-input v-model="DetailForm.t_code" disabled></el-input>
        </el-form-item>
        <el-form-item label="类型">
          <!-- <el-input v-model="DetailForm.t_type" disabled></el-input> -->
          <el-radio disabled v-model="DetailForm.t_type" label="0">普通专题</el-radio>
          <el-radio disabled v-model="DetailForm.t_type" label="1">场馆</el-radio>
          <el-radio disabled v-model="DetailForm.t_type" label="2">古村落</el-radio>
        </el-form-item>
        <el-form-item label="序号">
          <el-input v-model="DetailForm.t_id" disabled></el-input>
        </el-form-item>
        <el-form-item label="封面图">
          <!-- <el-input v-model="DetailForm.b_photo" disabled></el-input> -->
          <img :src="DetailForm.t_cover" width="150px">
        </el-form-item>
        <el-form-item label="描述">
          <el-input v-model="DetailForm.t_desc" disabled></el-input>
        </el-form-item>
        <el-form-item label="链接">
          <el-input v-model="DetailForm.t_url" disabled></el-input>
        </el-form-item>
        <el-form-item label="专题首页">
          <el-input v-model="DetailForm.t_indexpage" disabled></el-input>
        </el-form-item>
        <el-form-item label="专题负责人">
          <el-input v-model="DetailForm.t_director" disabled></el-input>
        </el-form-item>
      </el-form>
    </el-dialog>

    <!-- 分页 -->
    <div id="pagination">
      <el-pagination
        background
        layout="prev, pager, next"
        :total="total"
        @current-change="handleCurrentChange">
      </el-pagination>
    </div>

    <!-- 编辑模态框 -->
    <el-dialog 
      :visible.sync="EditDialogTableVisible"
      title="专题管理编辑" 
      top="25px"
      @closed="EditDialogClosed('EditForm')"
      :close-on-click-modal="false">
      <!-- 表单 -->
      <el-form ref="EditForm" :model="EditForm" label-width="80px" :rules="EditRules">
        <el-form-item label="排序值" prop="t_sort">
          <el-input v-model="EditForm.t_sort"></el-input>
        </el-form-item>
        <el-form-item label="发布" prop="t_status">
          <!-- <el-input v-model="EditForm.t_status"></el-input> -->
            <el-radio v-model="EditForm.t_status" label="0">未发布</el-radio>
            <el-radio v-model="EditForm.t_status" label="1">已发布</el-radio>
        </el-form-item>
        <el-form-item label="名称" prop="t_name">
          <el-input v-model="EditForm.t_name"></el-input>
        </el-form-item>
        <el-form-item label="代码" prop="t_code">
          <el-input v-model="EditForm.t_code"></el-input>
        </el-form-item>
        <el-form-item label="类型" prop="t_type">
          <!-- <el-input v-model="EditForm.t_type"></el-input> -->
          <el-radio v-model="EditForm.t_type" label="0">普通专题</el-radio>
          <el-radio v-model="EditForm.t_type" label="1">场馆</el-radio>
          <el-radio v-model="EditForm.t_type" label="2">古村落</el-radio>
        </el-form-item>
        <el-form-item label="序号" prop="t_id">
          <el-input v-model="EditForm.t_id"></el-input>
        </el-form-item>
        <el-form-item label="封面图" prop="t_cover">
          <!-- <el-input v-model="EditForm.b_photo" disabled></el-input> -->
          <!-- <img :src="EditForm.t_cover" width="150px"> -->
          <el-upload
            :action="uploadAddress"
            list-type="picture-card"
            name="file"
            :limit="1"
            ref="EditUpload"
            :on-success="successEditUpload"
            :on-remove="removeEditUpload"
            :file-list="EditFileList">
            <i class="el-icon-plus"></i>
          </el-upload>
        </el-form-item>
        <el-form-item label="描述" prop="t_desc">
          <el-input v-model="EditForm.t_desc"></el-input>
        </el-form-item>
        <el-form-item label="链接" prop="t_url">
          <el-input v-model="EditForm.t_url"></el-input>
        </el-form-item>
        <el-form-item label="专题首页" prop="t_indexpage">
          <el-input v-model="EditForm.t_indexpage"></el-input>
        </el-form-item>
        <el-form-item label="专题负责人" prop="t_director">
          <el-input v-model="EditForm.t_director"></el-input>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" @click="submitEditForm('EditForm')">提交</el-button>
          <el-button @click="cancleEditForm('EditForm')">取消</el-button>
        </el-form-item>
      </el-form>
    </el-dialog>

    <!-- 新建模态框 -->
    <el-dialog 
      :visible.sync="AddDialogTableVisible"
      title="新建专题管理" 
      top="25px"
      @closed="AddDialogClosed('AddForm')"
      :close-on-click-modal="false">
      <!-- 表单 -->
      <el-form ref="AddForm" :model="AddForm" label-width="80px" :rules="AddRules">
          <el-form-item label="排序值" prop="t_sort">
          <el-input v-model="AddForm.t_sort"></el-input>
        </el-form-item>
        <el-form-item label="发布" prop="t_status">
          <!-- <el-input v-model="EditForm.t_status"></el-input> -->
            <el-radio v-model="AddForm.t_status" label="0">未发布</el-radio>
            <el-radio v-model="AddForm.t_status" label="1">已发布</el-radio>
        </el-form-item>
        <el-form-item label="名称" prop="t_name">
          <el-input v-model="AddForm.t_name"></el-input>
        </el-form-item>
        <el-form-item label="代码" prop="t_code">
          <el-input v-model="AddForm.t_code"></el-input>
        </el-form-item>
        <el-form-item label="类型" prop="t_type">
          <!-- <el-input v-model="EditForm.t_type"></el-input> -->
          <el-radio v-model="AddForm.t_type" label="0">普通专题</el-radio>
          <el-radio v-model="AddForm.t_type" label="1">场馆</el-radio>
          <el-radio v-model="AddForm.t_type" label="2">古村落</el-radio>
        </el-form-item>
        <el-form-item label="序号" prop="t_id">
          <el-input v-model="AddForm.t_id"></el-input>
        </el-form-item>
        <el-form-item label="封面图" prop="t_cover">
          <!-- <el-input v-model="EditForm.b_photo" disabled></el-input> -->
          <!-- <img :src="EditForm.t_cover" width="150px"> -->
          <el-upload
            :action="uploadAddress"
            list-type="picture-card"
            name="file"
            :limit="1"
            ref="AddUpload"
            :on-success="successAddUpload"
            :on-remove="removeAddUpload">
            <i class="el-icon-plus"></i>
          </el-upload>
        </el-form-item>
        <el-form-item label="描述" prop="t_desc">
          <el-input v-model="AddForm.t_desc"></el-input>
        </el-form-item>
        <el-form-item label="链接" prop="t_url">
          <el-input v-model="AddForm.t_url"></el-input>
        </el-form-item>
        <el-form-item label="专题首页" prop="t_indexpage">
          <el-input v-model="AddForm.t_indexpage"></el-input>
        </el-form-item>
        <el-form-item label="专题负责人" prop="t_director">
          <el-input v-model="AddForm.t_director"></el-input>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" @click="submitAddForm('AddForm')">提交</el-button>
          <el-button @click="cancleAddForm('AddForm')">取消</el-button>
        </el-form-item>
      </el-form>
    </el-dialog>
  </div>
</template>

<script>
// 引入接口
import api from '@/api/api.js'
// 获取token
import { getToken , removeToken } from '@/utils/auth'

export default {
  name: 'symposium',
  data() {
      return {
          tableData : [],
          loading : true,  // 加载条
          total: 0, // 分页总条数
          start : 0, // 默认第一页
          limit : 10, // 每页10条

          // 查看详情的数据
          DetailDialogTableVisible : false, // 详情框默认的模态框
          DetailForm : {
              t_sort: '',
              t_status: '',
              t_name: '',
              t_code : '',
              t_type : '',
              t_id : '',
              t_cover : '',
              t_desc : '',
              t_url : '',
              t_indexpage : '',
              t_director : ''
          },

          // 编辑的数据
          EditDialogTableVisible : false, // 编辑框默认的模态框
          EditForm : {
              t_sort: '',
              t_status: '',
              t_name: '',
              t_code : '',
              t_type : '',
              t_id : '',
              t_cover : '',
              t_desc : '',
              t_url : '',
              t_indexpage : '',
              t_director : ''
          },
          EditFileList : [],
          EditRules : {
              t_sort : [{required: true,message : '请输入排序值', trigger: 'blur'}],
              t_status : [{required: true,message : '请选择状态', trigger: 'blur'}],
              t_name : [{required: true,message : '请输入名称', trigger: 'blur'}],
              t_code : [{required: true,message : '请输入代码', trigger: 'blur'}],
              t_type : [{required: true,message : '请选择类型', trigger: 'blur'}],
              t_id : [{required: true,message : '请输入序号', trigger: 'blur'}],
              t_cover : [{required: true,message : '请上传图片', trigger: 'blur'}],
              t_desc : [{required: true,message : '请输入描述', trigger: 'blur'}],
              t_url : [{required: true,message : '请输入链接', trigger: 'blur'}],
              t_indexpage : [{required: true,message : '请输入专题首页', trigger: 'blur'}],
              t_director : [{required: true,message : '请输入负责人', trigger: 'blur'}],
          },

            // 新建的数据
            AddDialogTableVisible : false,
            AddForm : {
              t_sort: '',
              t_status: '',
              t_name: '',
              t_code : '',
              t_type : '',
              t_id : '',
              t_cover : '',
              t_desc : '',
              t_url : '',
              t_indexpage : '',
              t_director : ''
            },
            AddRules : {
              t_sort : [{required: true,message : '请输入排序值', trigger: 'blur'}],
              t_status : [{required: true,message : '请选择状态', trigger: 'blur'}],
              t_name : [{required: true,message : '请输入名称', trigger: 'blur'}],
              t_code : [{required: true,message : '请输入代码', trigger: 'blur'}],
              t_type : [{required: true,message : '请选择类型', trigger: 'blur'}],
              t_id : [{required: true,message : '请输入序号', trigger: 'blur'}],
              t_cover : [{required: true,message : '请上传图片', trigger: 'blur'}],
              t_desc : [{required: true,message : '请输入描述', trigger: 'blur'}],
              t_url : [{required: true,message : '请输入链接', trigger: 'blur'}],
              t_indexpage : [{required: true,message : '请输入专题首页', trigger: 'blur'}],
              t_director : [{required: true,message : '请输入负责人', trigger: 'blur'}],
            },


          uploadAddress : `${api.dev}/p/main/upload/image`,  // 上传图片的地址
      }
  },
  methods : {
      getInfo(){
          this.$http.get(`${api.dev}/p/main/topic/show`,{params: {access_token: getToken(),start: this.start,limit: this.limit}}).then(res => {
              if(res.body.code == 200) {
                    res.body.content.records.forEach(i => {
                        if(i.t_type == 0) {
                            i.t_type = '普通专题';
                        }else if (i.t_type == 1) {
                            i.t_type = '场馆';
                        }else if (i.t_type == 2) {
                            i.t_type = '古村落';
                        }

                        if(i.t_status == 0) {
                           i.t_status = '未发布';
                        }else{
                            i.t_status = '已发布';
                        }
                    });
                    this.tableData = res.body.content.records;
                    this.total = res.body.content.total
                    this.loading = false;
              }else if (res.body.code == 500) {
                    this.$message({
                        message : res.body.msg,
                        type : 'error'
                    })
                    removeToken();
                    setTimeout(function () {
                            window.location.href = '/stwhy';
                    },2000)
              }
          })
      },
      handleDetail(row) {
            // 开启加载器
            const loading = this.$loading({
                lock: true,
                text: 'Loading',
                spinner: 'el-icon-loading',
                background: 'rgba(0, 0, 0, 0.7)'
            });
            this.$http.get(`${api.dev}/p/main/topic/select`,{params: {access_token: getToken(),t_id : row.t_id}}).then(res => {
                if(res.body.code == 200) {
                    // 关闭加载器
                    loading.close();
                    this.DetailDialogTableVisible = true;

                    this.DetailForm.t_sort = res.body.content.t_sort;
                    this.DetailForm.t_status = (res.body.content.t_status).toString(); // Radio必须为字符串类型
                    this.DetailForm.t_name = res.body.content.t_name;
                    this.DetailForm.t_code = res.body.content.t_code;
                    this.DetailForm.t_type = (res.body.content.t_type).toString(); // Radio必须为字符串类型
                    this.DetailForm.t_id = res.body.content.t_id;
                    this.DetailForm.t_cover = res.body.content.t_cover;
                    this.DetailForm.t_desc = res.body.content.t_desc;
                    this.DetailForm.t_url = res.body.content.t_url;
                    this.DetailForm.t_indexpage = res.body.content.t_indexpage;
                    this.DetailForm.t_director = res.body.content.t_director;
                }else if(res.body.code == 500) {
                    this.$message({
                        message: res.body.msg,
                        type: 'error'
                    });
                    removeToken();
                    setTimeout(function () {
                        window.location.href = '/stwhy';
                    },2000)
                }
            })
      },
      handleEdit(row) {
        // 开启加载器
        const loading = this.$loading({
            lock: true,
            text: 'Loading',
            spinner: 'el-icon-loading',
            background: 'rgba(0, 0, 0, 0.7)'
        });
        this.$http.get(`${api.dev}/p/main/topic/select`,{params : {access_token : getToken() , t_id : row.t_id} }).then(res => {
            if(res.body.code == 200) {
                // 关闭加载器
                loading.close();
                this.EditDialogTableVisible = true;

                this.EditForm.t_sort = res.body.content.t_sort;
                this.EditForm.t_status = (res.body.content.t_status).toString(); // Radio必须为字符串类型
                this.EditForm.t_name = res.body.content.t_name;
                this.EditForm.t_code = res.body.content.t_code;
                this.EditForm.t_type = (res.body.content.t_type).toString();  // Radio必须为字符串类型
                this.EditForm.t_id = res.body.content.t_id;
                this.EditForm.t_cover = res.body.content.t_cover;
                this.EditForm.t_desc = res.body.content.t_desc;
                this.EditForm.t_url = res.body.content.t_url;
                this.EditForm.t_indexpage = res.body.content.t_indexpage;
                this.EditForm.t_director = res.body.content.t_director;

                this.EditFileList = [{url: res.body.content.t_cover}];
            }else if (res.body.code == 500) {
                this.$message({
                    message: res.body.msg,
                    type: 'error'
                });
                removeToken();
                setTimeout(function () {
                    window.location.href = '/stwhy';
                },2000)
            }
        })
      },
      handleDelete(row) {
          this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning'
          }).then(() => {
              this.loading = true;
              this.$http.post(`${api.dev}/p/main/topic/delete`,{access_token : getToken() , t_id : row.t_id},{emulateJSON : true}).then(res => {
                    if(res.body.code == 200) {
                        this.$message({
                        message: '删除成功',
                        type: 'success'
                        });
                        this.getInfo();
                    }else if (res.body.code == 500) {
                        this.$message({
                            message: res.body.msg,
                            type: 'error'
                        });
                        removeToken();
                        setTimeout(function () {
                            window.location.href = '/stwhy';
                        },2000)
                    }
              })
          })
      },
      submitEditForm(formName) {
          this.$refs[formName].validate((valid) => {
              if(valid) {
                    // 开启加载器
                    const loading = this.$loading({
                        lock: true,
                        text: '正在保存中...',
                        spinner: 'el-icon-loading',
                        background: 'rgba(0, 0, 0, 0.7)'
                    });
                    var formdata = new FormData();
                    formdata.append('access_token',getToken());
                    formdata.append('t_name',this.EditForm.t_name);
                    formdata.append('t_status',this.EditForm.t_status);
                    formdata.append('t_sort',this.EditForm.t_sort);
                    formdata.append('t_cover',this.EditForm.t_cover);
                    formdata.append('t_url',this.EditForm.t_url);
                    formdata.append('t_director',this.EditForm.t_director);
                    formdata.append('t_desc',this.EditForm.t_desc);
                    formdata.append('t_code',this.EditForm.t_code);
                    formdata.append('t_type',this.EditForm.t_type);
                    formdata.append('t_indexpage',this.EditForm.t_indexpage);
                    formdata.append('t_id',this.EditForm.t_id);

                    this.$http.post(`${api.dev}/p/main/topic/update`,formdata,{emulateJSON:true}).then(res => {
                        if(res.body.code == 200) {
                            loading.close();
                            this.EditDialogTableVisible = false;
                            this.$refs[formName].clearValidate(); // 清除表单验证规则
                            this.$message({
                                message: res.body.msg,
                                type: 'success'
                            });
                            this.loading = true;
                            this.getInfo();
                        }else if (res.body.code == 500) {
                            this.$message({
                                message: res.body.msg,
                                type: 'error'
                            });
                        }
                    })
              }else {
                  console.log('error submit');
                  return false;
              }
          })
      },
      cancleEditForm(formName) {
            this.EditDialogTableVisible = false;
            this.$refs[formName].clearValidate(); // 清除表单验证规则
      },
      successEditUpload(res,file,fileList) {
            this.EditForm.t_cover = `${api.address}${res.content}`;
      },
      removeEditUpload(file,fileList) {
            this.EditForm.t_cover = '';
      },
      submitAddForm(formName) {
          this.$refs[formName].validate((valid) => {
              if(valid) {
                    // 开启加载器
                    const loading = this.$loading({
                        lock: true,
                        text: '正在保存中...',
                        spinner: 'el-icon-loading',
                        background: 'rgba(0, 0, 0, 0.7)'
                    });
                    var formdata = new FormData();
                    formdata.append('access_token',getToken());
                    formdata.append('t_name',this.AddForm.t_name);
                    formdata.append('t_status',this.AddForm.t_status);
                    formdata.append('t_sort',this.AddForm.t_sort);
                    formdata.append('t_cover',this.AddForm.t_cover);
                    formdata.append('t_url',this.AddForm.t_url);
                    formdata.append('t_director',this.AddForm.t_director);
                    formdata.append('t_desc',this.AddForm.t_desc);
                    formdata.append('t_code',this.AddForm.t_code);
                    formdata.append('t_type',this.AddForm.t_type);
                    formdata.append('t_indexpage',this.AddForm.t_indexpage);
                    formdata.append('t_id',this.AddForm.t_id);

                    this.$http.post(`${api.dev}/p/main/topic/save`,formdata, {emulateJSON:true}).then(res => {
                        if(res.body.code == 200) {
                            loading.close();
                            this.$message({
                                message: res.body.msg,
                                type: 'success'
                            })
                            this.AddDialogTableVisible = false;
                            this.loading = true;
                            this.getInfo();
                            this.$refs[formName].resetFields(); // 清除表单验证规则 清空表单数据
                            this.$refs.AddUpload.clearFiles(); // 清除图片位置
                        }else if (res.body.code == 500) {
                            this.$message({
                                message: res.body.msg,
                                type : 'error'
                            })
                        }
                    })
              }
          })
      },
      cancleAddForm(formName) {
        this.AddDialogTableVisible = false;
        this.$refs[formName].resetFields(); // 清除表单验证规则
        this.$refs.AddUpload.clearFiles(); // 清除图片位置
      },
      successAddUpload(res,file,fileList) {
        this.AddForm.t_cover = `${api.address}${res.content}`;
      },
      removeAddUpload(file,fileList) {
        this.AddForm.t_cover = '';
      },
      AddDialogClosed(formName) {
        this.$refs[formName].resetFields(); // 清除表单验证规则
        this.$refs.AddUpload.clearFiles(); // 清除图片位置
      },
      EditDialogClosed(formName) {
          this.$refs[formName].clearValidate(); // 清除表单验证规则
      },
        // 分页
        handleCurrentChange(val) {
            this.loading = true;
            this.start = 10 * (val - 1);
            this.getInfo();
        }
  },
  created() {
      this.getInfo();
  }
}
</script>

<style lang="stylus" scoped>
#pagination
  margin-top 10px
.AddVillageBtn 
  margin-bottom 10px
</style>
